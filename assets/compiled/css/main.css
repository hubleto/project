/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, primereact, hubleto-framework, utilities, hubleto-main;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: 'Gabarito', 'sans-serif';
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-50: oklch(97.1% 0.013 17.38);
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-orange-100: oklch(95.4% 0.038 75.164);
    --color-orange-300: oklch(83.7% 0.128 66.29);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-orange-700: oklch(55.3% 0.195 38.402);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-amber-600: oklch(66.6% 0.179 58.318);
    --color-yellow-50: oklch(98.7% 0.026 102.212);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-200: oklch(94.5% 0.129 101.54);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-800: oklch(47.6% 0.114 61.907);
    --color-lime-100: oklch(96.7% 0.067 122.328);
    --color-lime-200: oklch(93.8% 0.127 124.321);
    --color-lime-800: oklch(45.3% 0.124 130.933);
    --color-lime-900: oklch(40.5% 0.101 131.063);
    --color-green-50: oklch(98.2% 0.018 155.826);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-sky-300: oklch(82.8% 0.111 230.318);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-violet-100: oklch(94.3% 0.029 294.588);
    --color-violet-200: oklch(89.4% 0.057 293.283);
    --color-violet-800: oklch(43.2% 0.232 292.759);
    --color-purple-300: oklch(82.7% 0.119 306.383);
    --color-purple-400: oklch(71.4% 0.203 305.504);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-slate-50: oklch(98.4% 0.003 247.858);
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --color-slate-200: oklch(92.9% 0.013 255.508);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-400: oklch(70.4% 0.04 256.788);
    --color-slate-500: oklch(55.4% 0.046 257.417);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-slate-950: oklch(12.9% 0.042 264.695);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-gray-950: oklch(13% 0.028 261.692);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-lg: 32rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-primary: #4780bf;
    --color-secondary: #41c50d;
    --nav-height: 3rem;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .\!visible {
    visibility: visible !important;
  }
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .visible\! {
    visibility: visible !important;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .\!absolute {
    position: absolute !important;
  }
  .\!sticky {
    position: sticky !important;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .\!top-0 {
    top: calc(var(--spacing) * 0) !important;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-\[50\%\] {
    top: 50%;
  }
  .top-auto {
    top: auto;
  }
  .top-full {
    top: 100%;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-12 {
    right: calc(var(--spacing) * 12);
  }
  .right-20 {
    right: calc(var(--spacing) * 20);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-20 {
    bottom: calc(var(--spacing) * 20);
  }
  .bottom-\[-0\.75rem\] {
    bottom: -0.75rem;
  }
  .\!left-0 {
    left: calc(var(--spacing) * 0) !important;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-2 {
    left: calc(var(--spacing) * 2);
  }
  .left-2\/4 {
    left: calc(2/4 * 100%);
  }
  .left-44 {
    left: calc(var(--spacing) * 44);
  }
  .left-\[50\%\] {
    left: 50%;
  }
  .left-auto {
    left: auto;
  }
  .left-full {
    left: 100%;
  }
  .z-0 {
    z-index: 0;
  }
  .z-1 {
    z-index: 1;
  }
  .z-2 {
    z-index: 2;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-40 {
    z-index: 40;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .z-\[2\] {
    z-index: 2;
  }
  .order-1 {
    order: 1;
  }
  .order-2 {
    order: 2;
  }
  .float-left {
    float: left;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .\!m-0 {
    margin: calc(var(--spacing) * 0) !important;
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .m-2 {
    margin: calc(var(--spacing) * 2);
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .m-\[0\.143rem\] {
    margin: 0.143rem;
  }
  .m-auto {
    margin: auto;
  }
  .mx-0 {
    margin-inline: calc(var(--spacing) * 0);
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-0 {
    margin-block: calc(var(--spacing) * 0);
  }
  .my-0\.5 {
    margin-block: calc(var(--spacing) * 0.5);
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }
  .ms-1 {
    margin-inline-start: calc(var(--spacing) * 1);
  }
  .ms-3 {
    margin-inline-start: calc(var(--spacing) * 3);
  }
  .-mt-1 {
    margin-top: calc(var(--spacing) * -1);
  }
  .-mt-2 {
    margin-top: calc(var(--spacing) * -2);
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-1\.5 {
    margin-top: calc(var(--spacing) * 1.5);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-\[-0\.5rem\] {
    margin-top: -0.5rem;
  }
  .mt-\[-0\.5715rem\] {
    margin-top: -0.5715rem;
  }
  .-mr-7 {
    margin-right: calc(var(--spacing) * -7);
  }
  .mr-0 {
    margin-right: calc(var(--spacing) * 0);
  }
  .mr-0\.5 {
    margin-right: calc(var(--spacing) * 0.5);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }
  .mr-5 {
    margin-right: calc(var(--spacing) * 5);
  }
  .mr-\[15px\] {
    margin-right: 15px;
  }
  .\!mb-0 {
    margin-bottom: calc(var(--spacing) * 0) !important;
  }
  .\!mb-2 {
    margin-bottom: calc(var(--spacing) * 2) !important;
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-1\.5 {
    margin-bottom: calc(var(--spacing) * 1.5);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-\[-0\.5715rem\] {
    margin-bottom: -0.5715rem;
  }
  .-ml-1 {
    margin-left: calc(var(--spacing) * -1);
  }
  .-ml-3 {
    margin-left: calc(var(--spacing) * -3);
  }
  .-ml-4 {
    margin-left: calc(var(--spacing) * -4);
  }
  .ml-0 {
    margin-left: calc(var(--spacing) * 0);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }
  .ml-8 {
    margin-left: calc(var(--spacing) * 8);
  }
  .ml-\[-0\.75rem\] {
    margin-left: -0.75rem;
  }
  .ml-\[-0\.4715rem\] {
    margin-left: -0.4715rem;
  }
  .ml-\[-0\.5715rem\] {
    margin-left: -0.5715rem;
  }
  .ml-auto {
    margin-left: auto;
  }
  .box-border {
    box-sizing: border-box;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .list-item {
    display: list-item;
  }
  .table {
    display: table;
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .\!h-16 {
    height: calc(var(--spacing) * 16) !important;
  }
  .\!h-auto {
    height: auto !important;
  }
  .\!h-screen {
    height: 100vh !important;
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-11 {
    height: calc(var(--spacing) * 11);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-28 {
    height: calc(var(--spacing) * 28);
  }
  .h-40 {
    height: calc(var(--spacing) * 40);
  }
  .h-44 {
    height: calc(var(--spacing) * 44);
  }
  .h-48 {
    height: calc(var(--spacing) * 48);
  }
  .h-56 {
    height: calc(var(--spacing) * 56);
  }
  .h-72 {
    height: calc(var(--spacing) * 72);
  }
  .h-\[0\.3rem\] {
    height: 0.3rem;
  }
  .h-\[1\.5rem\] {
    height: 1.5rem;
  }
  .h-\[1\.143rem\] {
    height: 1.143rem;
  }
  .h-\[2\.25rem\] {
    height: 2.25rem;
  }
  .h-\[2px\] {
    height: 2px;
  }
  .h-\[2rem\] {
    height: 2rem;
  }
  .h-\[3rem\] {
    height: 3rem;
  }
  .h-\[9px\] {
    height: 9px;
  }
  .h-\[20em\] {
    height: 20em;
  }
  .h-\[20px\] {
    height: 20px;
  }
  .h-\[30px\] {
    height: 30px;
  }
  .h-\[35vh\] {
    height: 35vh;
  }
  .h-\[calc\(100\%\+18px\)\] {
    height: calc(100% + 18px);
  }
  .h-full {
    height: 100%;
  }
  .\!max-h-0 {
    max-height: calc(var(--spacing) * 0) !important;
  }
  .\!max-h-40 {
    max-height: calc(var(--spacing) * 40) !important;
  }
  .\!max-h-\[1000px\] {
    max-height: 1000px !important;
  }
  .\!max-h-full {
    max-height: 100% !important;
  }
  .max-h-0 {
    max-height: calc(var(--spacing) * 0);
  }
  .max-h-40 {
    max-height: calc(var(--spacing) * 40);
  }
  .max-h-\[24rem\] {
    max-height: 24rem;
  }
  .max-h-\[90\%\] {
    max-height: 90%;
  }
  .max-h-\[200px\] {
    max-height: 200px;
  }
  .max-h-\[1000px\] {
    max-height: 1000px;
  }
  .min-h-0 {
    min-height: calc(var(--spacing) * 0);
  }
  .min-h-\[12rem\] {
    min-height: 12rem;
  }
  .min-h-\[70px\] {
    min-height: 70px;
  }
  .min-h-full {
    min-height: 100%;
  }
  .\!w-screen {
    width: 100vw !important;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-1\/3 {
    width: calc(1/3 * 100%);
  }
  .w-1\/4 {
    width: calc(1/4 * 100%);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-28 {
    width: calc(var(--spacing) * 28);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-36 {
    width: calc(var(--spacing) * 36);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-52 {
    width: calc(var(--spacing) * 52);
  }
  .w-56 {
    width: calc(var(--spacing) * 56);
  }
  .w-60 {
    width: calc(var(--spacing) * 60);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-96 {
    width: calc(var(--spacing) * 96);
  }
  .w-\[0\.3rem\] {
    width: 0.3rem;
  }
  .w-\[1\%\] {
    width: 1%;
  }
  .w-\[1\.143rem\] {
    width: 1.143rem;
  }
  .w-\[2px\] {
    width: 2px;
  }
  .w-\[2rem\] {
    width: 2rem;
  }
  .w-\[3rem\] {
    width: 3rem;
  }
  .w-\[9px\] {
    width: 9px;
  }
  .w-\[12\.5rem\] {
    width: 12.5rem;
  }
  .w-\[50vw\] {
    width: 50vw;
  }
  .w-\[100\%\] {
    width: 100%;
  }
  .w-\[calc\(100\%\+18px\)\] {
    width: calc(100% + 18px);
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .w-px {
    width: 1px;
  }
  .max-w-90 {
    max-width: calc(var(--spacing) * 90);
  }
  .max-w-\[3rem\] {
    max-width: 3rem;
  }
  .max-w-\[30rem\] {
    max-width: 30rem;
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .min-w-44 {
    min-width: calc(var(--spacing) * 44);
  }
  .min-w-\[1\.5rem\] {
    min-width: 1.5rem;
  }
  .min-w-\[1\.143rem\] {
    min-width: 1.143rem;
  }
  .min-w-\[2\.25rem\] {
    min-width: 2.25rem;
  }
  .min-w-\[3rem\] {
    min-width: 3rem;
  }
  .min-w-\[12\.5rem\] {
    min-width: 12.5rem;
  }
  .min-w-full {
    min-width: 100%;
  }
  .min-w-min {
    min-width: min-content;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-2 {
    flex: 2;
  }
  .flex-3 {
    flex: 3;
  }
  .flex-6 {
    flex: 6;
  }
  .flex-10 {
    flex: 10;
  }
  .flex-auto {
    flex: auto;
  }
  .flex-initial {
    flex: 0 auto;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .grow-0 {
    flex-grow: 0;
  }
  .basis-2\/4 {
    flex-basis: calc(2/4 * 100%);
  }
  .table-fixed {
    table-layout: fixed;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .border-separate {
    border-collapse: separate;
  }
  .border-spacing-0 {
    --tw-border-spacing-x: calc(var(--spacing) * 0);
    --tw-border-spacing-y: calc(var(--spacing) * 0);
    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
  }
  .origin-bottom {
    transform-origin: bottom;
  }
  .origin-center {
    transform-origin: center;
  }
  .origin-left {
    transform-origin: left;
  }
  .origin-right {
    transform-origin: right;
  }
  .origin-top {
    transform-origin: top;
  }
  .\!-translate-x-full {
    --tw-translate-x: -100% !important;
    translate: var(--tw-translate-x) var(--tw-translate-y) !important;
  }
  .\!translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0) !important;
    translate: var(--tw-translate-x) var(--tw-translate-y) !important;
  }
  .\!translate-x-full {
    --tw-translate-x: 100% !important;
    translate: var(--tw-translate-x) var(--tw-translate-y) !important;
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-full {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .\!-translate-y-full {
    --tw-translate-y: -100% !important;
    translate: var(--tw-translate-x) var(--tw-translate-y) !important;
  }
  .\!translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0) !important;
    translate: var(--tw-translate-x) var(--tw-translate-y) !important;
  }
  .\!translate-y-full {
    --tw-translate-y: 100% !important;
    translate: var(--tw-translate-x) var(--tw-translate-y) !important;
  }
  .-translate-y-full {
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-2\/4 {
    --tw-translate-y: calc(2/4 * 100%);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-full {
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-z-0 {
    --tw-translate-z: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
  }
  .\!scale-75 {
    --tw-scale-x: 75% !important;
    --tw-scale-y: 75% !important;
    --tw-scale-z: 75% !important;
    scale: var(--tw-scale-x) var(--tw-scale-y) !important;
  }
  .\!scale-100 {
    --tw-scale-x: 100% !important;
    --tw-scale-y: 100% !important;
    --tw-scale-z: 100% !important;
    scale: var(--tw-scale-x) var(--tw-scale-y) !important;
  }
  .scale-0 {
    --tw-scale-x: 0%;
    --tw-scale-y: 0%;
    --tw-scale-z: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-10 {
    --tw-scale-x: 10%;
    --tw-scale-y: 10%;
    --tw-scale-z: 10%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-75 {
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-110 {
    --tw-scale-x: 110%;
    --tw-scale-y: 110%;
    --tw-scale-z: 110%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-125 {
    --tw-scale-x: 125%;
    --tw-scale-y: 125%;
    --tw-scale-z: 125%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .rotate-45 {
    rotate: 45deg;
  }
  .\!transform-none {
    transform: none !important;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .transform-none {
    transform: none;
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-auto {
    cursor: auto;
  }
  .cursor-col-resize {
    cursor: col-resize;
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-grab {
    cursor: grab;
  }
  .cursor-move {
    cursor: move;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-row-resize {
    cursor: row-resize;
  }
  .cursor-text {
    cursor: text;
  }
  .resize {
    resize: both;
  }
  .list-disc {
    list-style-type: disc;
  }
  .list-none {
    list-style-type: none;
  }
  .appearance-none {
    appearance: none;
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .\!items-center {
    align-items: center !important;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .\!justify-center {
    justify-content: center !important;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .self-auto {
    align-self: auto;
  }
  .self-baseline {
    align-self: baseline;
  }
  .self-center {
    align-self: center;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-scroll {
    overflow: scroll;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .overscroll-auto {
    overscroll-behavior: auto;
  }
  .overscroll-contain {
    overscroll-behavior: contain;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .\!rounded-full {
    border-radius: calc(infinity * 1px) !important;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-\[16px\] {
    border-radius: 16px;
  }
  .rounded-\[50\%\] {
    border-radius: 50%;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-none {
    border-radius: 0;
  }
  .rounded-t-lg {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }
  .rounded-t-md {
    border-top-left-radius: var(--radius-md);
    border-top-right-radius: var(--radius-md);
  }
  .rounded-t-none {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
  .rounded-l-full {
    border-top-left-radius: calc(infinity * 1px);
    border-bottom-left-radius: calc(infinity * 1px);
  }
  .rounded-l-lg {
    border-top-left-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }
  .rounded-l-none {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  .rounded-tl-lg {
    border-top-left-radius: var(--radius-lg);
  }
  .rounded-tl-md {
    border-top-left-radius: var(--radius-md);
  }
  .rounded-tl-none {
    border-top-left-radius: 0;
  }
  .rounded-r-full {
    border-top-right-radius: calc(infinity * 1px);
    border-bottom-right-radius: calc(infinity * 1px);
  }
  .rounded-r-md {
    border-top-right-radius: var(--radius-md);
    border-bottom-right-radius: var(--radius-md);
  }
  .rounded-r-none {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  .rounded-tr-lg {
    border-top-right-radius: var(--radius-lg);
  }
  .rounded-tr-md {
    border-top-right-radius: var(--radius-md);
  }
  .rounded-tr-none {
    border-top-right-radius: 0;
  }
  .rounded-b-lg {
    border-bottom-right-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }
  .rounded-b-md {
    border-bottom-right-radius: var(--radius-md);
    border-bottom-left-radius: var(--radius-md);
  }
  .rounded-br-lg {
    border-bottom-right-radius: var(--radius-lg);
  }
  .rounded-br-md {
    border-bottom-right-radius: var(--radius-md);
  }
  .rounded-br-none {
    border-bottom-right-radius: 0;
  }
  .rounded-bl-lg {
    border-bottom-left-radius: var(--radius-lg);
  }
  .rounded-bl-md {
    border-bottom-left-radius: var(--radius-md);
  }
  .rounded-bl-none {
    border-bottom-left-radius: 0;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-x {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 1px;
  }
  .border-x-0 {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 0px;
  }
  .border-x-\[0\.25rem\] {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 0.25rem;
  }
  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }
  .border-y-\[0\.25rem\] {
    border-block-style: var(--tw-border-style);
    border-block-width: 0.25rem;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-0 {
    border-top-style: var(--tw-border-style);
    border-top-width: 0px;
  }
  .border-t-1 {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-\[0\.25rem\] {
    border-top-style: var(--tw-border-style);
    border-top-width: 0.25rem;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-r-0 {
    border-right-style: var(--tw-border-style);
    border-right-width: 0px;
  }
  .border-r-\[0\.25rem\] {
    border-right-style: var(--tw-border-style);
    border-right-width: 0.25rem;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-0 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-b-\[0\.25rem\] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0.25rem;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-l-0 {
    border-left-style: var(--tw-border-style);
    border-left-width: 0px;
  }
  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }
  .border-l-\[0\.25rem\] {
    border-left-style: var(--tw-border-style);
    border-left-width: 0.25rem;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-blue-50 {
    border-color: var(--color-blue-50);
  }
  .border-blue-500 {
    border-color: var(--color-blue-500);
  }
  .border-blue-800 {
    border-color: var(--color-blue-800);
  }
  .border-gray-100 {
    border-color: var(--color-gray-100);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-400 {
    border-color: var(--color-gray-400);
  }
  .border-gray-500 {
    border-color: var(--color-gray-500);
  }
  .border-gray-900 {
    border-color: var(--color-gray-900);
  }
  .border-green-500 {
    border-color: var(--color-green-500);
  }
  .border-inherit {
    border-color: inherit;
  }
  .border-orange-500 {
    border-color: var(--color-orange-500);
  }
  .border-purple-500 {
    border-color: var(--color-purple-500);
  }
  .border-red-500 {
    border-color: var(--color-red-500);
  }
  .border-red-500\/50 {
    border-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-red-500) 50%, transparent);
    }
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-white\/20 {
    border-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .border-yellow-300 {
    border-color: var(--color-yellow-300);
  }
  .border-t-gray-600 {
    border-top-color: var(--color-gray-600);
  }
  .border-r-gray-600 {
    border-right-color: var(--color-gray-600);
  }
  .border-b-gray-600 {
    border-bottom-color: var(--color-gray-600);
  }
  .border-l-gray-600 {
    border-left-color: var(--color-gray-600);
  }
  .\!bg-blue-500 {
    background-color: var(--color-blue-500) !important;
  }
  .\!bg-gray-700 {
    background-color: var(--color-gray-700) !important;
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/40 {
    background-color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-black\/90 {
    background-color: color-mix(in srgb, #000 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 90%, transparent);
    }
  }
  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }
  .bg-blue-50\/50 {
    background-color: color-mix(in srgb, oklch(97% 0.014 254.604) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-50) 50%, transparent);
    }
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-300\/40 {
    background-color: color-mix(in srgb, oklch(80.9% 0.105 251.813) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-300) 40%, transparent);
    }
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-500\/20 {
    background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    }
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-100\/40 {
    background-color: color-mix(in srgb, oklch(96.7% 0.003 264.542) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-100) 40%, transparent);
    }
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }
  .bg-gray-600 {
    background-color: var(--color-gray-600);
  }
  .bg-gray-700 {
    background-color: var(--color-gray-700);
  }
  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }
  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }
  .bg-green-50 {
    background-color: var(--color-green-50);
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-inherit {
    background-color: inherit;
  }
  .bg-lime-100 {
    background-color: var(--color-lime-100);
  }
  .bg-orange-100 {
    background-color: var(--color-orange-100);
  }
  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }
  .bg-red-50 {
    background-color: var(--color-red-50);
  }
  .bg-red-100 {
    background-color: var(--color-red-100);
  }
  .bg-red-200 {
    background-color: var(--color-red-200);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-slate-50 {
    background-color: var(--color-slate-50);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/10 {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .bg-white\/50 {
    background-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .bg-white\/80 {
    background-color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .bg-yellow-50 {
    background-color: var(--color-yellow-50);
  }
  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }
  .bg-clip-padding {
    background-clip: padding-box;
  }
  .fill-blue-600 {
    fill: var(--color-blue-600);
  }
  .fill-none {
    fill: none;
  }
  .stroke-blue-500 {
    stroke: var(--color-blue-500);
  }
  .stroke-current {
    stroke: currentcolor;
  }
  .stroke-gray-200 {
    stroke: var(--color-gray-200);
  }
  .\!p-0 {
    padding: calc(var(--spacing) * 0) !important;
  }
  .\!p-3 {
    padding: calc(var(--spacing) * 3) !important;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-12 {
    padding: calc(var(--spacing) * 12);
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-7 {
    padding-inline: calc(var(--spacing) * 7);
  }
  .\!py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5) !important;
  }
  .\!py-2 {
    padding-block: calc(var(--spacing) * 2) !important;
  }
  .py-0 {
    padding-block: calc(var(--spacing) * 0);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }
  .pr-0 {
    padding-right: calc(var(--spacing) * 0);
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pr-5 {
    padding-right: calc(var(--spacing) * 5);
  }
  .pr-7 {
    padding-right: calc(var(--spacing) * 7);
  }
  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }
  .pr-\[2\.5rem\] {
    padding-right: 2.5rem;
  }
  .pr-\[18px\] {
    padding-right: 18px;
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-\[18px\] {
    padding-bottom: 18px;
  }
  .pl-0 {
    padding-left: calc(var(--spacing) * 0);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }
  .pl-9 {
    padding-left: calc(var(--spacing) * 9);
  }
  .pl-14 {
    padding-left: calc(var(--spacing) * 14);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .align-bottom {
    vertical-align: bottom;
  }
  .align-middle {
    vertical-align: middle;
  }
  .align-top {
    vertical-align: top;
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-6 {
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }
  .leading-8 {
    --tw-leading: calc(var(--spacing) * 8);
    line-height: calc(var(--spacing) * 8);
  }
  .leading-\[1\.5rem\] {
    --tw-leading: 1.5rem;
    line-height: 1.5rem;
  }
  .leading-\[1\.143rem\] {
    --tw-leading: 1.143rem;
    line-height: 1.143rem;
  }
  .leading-\[2\.25rem\] {
    --tw-leading: 2.25rem;
    line-height: 2.25rem;
  }
  .leading-\[3rem\] {
    --tw-leading: 3rem;
    line-height: 3rem;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .overflow-ellipsis {
    text-overflow: ellipsis;
  }
  .text-ellipsis {
    text-overflow: ellipsis;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre {
    white-space: pre;
  }
  .whitespace-pre-line {
    white-space: pre-line;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-blue-700 {
    color: var(--color-blue-700);
  }
  .text-blue-800 {
    color: var(--color-blue-800);
  }
  .text-gray-100 {
    color: var(--color-gray-100);
  }
  .text-gray-200 {
    color: var(--color-gray-200);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-500\/60 {
    color: color-mix(in srgb, oklch(55.1% 0.027 264.364) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-gray-500) 60%, transparent);
    }
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-green-700 {
    color: var(--color-green-700);
  }
  .text-green-800 {
    color: var(--color-green-800);
  }
  .text-inherit {
    color: inherit;
  }
  .text-lime-900 {
    color: var(--color-lime-900);
  }
  .text-orange-500 {
    color: var(--color-orange-500);
  }
  .text-orange-700 {
    color: var(--color-orange-700);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-purple-500 {
    color: var(--color-purple-500);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-700 {
    color: var(--color-red-700);
  }
  .text-red-800 {
    color: var(--color-red-800);
  }
  .text-secondary {
    color: var(--color-secondary);
  }
  .text-slate-700 {
    color: var(--color-slate-700);
  }
  .text-slate-900 {
    color: var(--color-slate-900);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-yellow-100 {
    color: var(--color-yellow-100);
  }
  .text-yellow-400 {
    color: var(--color-yellow-400);
  }
  .text-yellow-500 {
    color: var(--color-yellow-500);
  }
  .text-yellow-800 {
    color: var(--color-yellow-800);
  }
  .italic {
    font-style: italic;
  }
  .no-underline {
    text-decoration-line: none;
  }
  .underline {
    text-decoration-line: underline;
  }
  .placeholder-blue-300 {
    &::placeholder {
      color: var(--color-blue-300);
    }
  }
  .\!opacity-0 {
    opacity: 0% !important;
  }
  .\!opacity-90 {
    opacity: 90% !important;
  }
  .\!opacity-100 {
    opacity: 100% !important;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-1 {
    opacity: 1%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-85 {
    opacity: 85%;
  }
  .opacity-90 {
    opacity: 90%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0_0_0_0\.2rem_rgba\(191\,219\,254\,1\)\] {
    --tw-shadow: 0 0 0 0.2rem var(--tw-shadow-color, rgba(191,219,254,1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0_2px_12px_rgba\(0\,0\,0\,0\.1\)\] {
    --tw-shadow: 0 2px 12px var(--tw-shadow-color, rgba(0,0,0,0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-blue-200 {
    --tw-shadow-color: oklch(88.2% 0.059 254.128);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-blue-200) var(--tw-shadow-alpha), transparent);
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-offset-0 {
    outline-offset: 0px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[max-height\] {
    transition-property: max-height;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .\!transition-none {
    transition-property: none !important;
  }
  .transition-none {
    transition-property: none;
  }
  .delay-200 {
    transition-delay: 200ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-250 {
    --tw-duration: 250ms;
    transition-duration: 250ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-400 {
    --tw-duration: 400ms;
    transition-duration: 400ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-800 {
    --tw-duration: 800ms;
    transition-duration: 800ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .duration-\[250ms\] {
    --tw-duration: 250ms;
    transition-duration: 250ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-linear {
    --tw-ease: linear;
    transition-timing-function: linear;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .backface-hidden {
    backface-visibility: hidden;
  }
  .\*\:w-1\/2 {
    :is(& > *) {
      width: calc(1/2 * 100%);
    }
  }
  .peer-hover\:border-blue-500 {
    &:is(:where(.peer):hover ~ *) {
      @media (hover: hover) {
        border-color: var(--color-blue-500);
      }
    }
  }
  .peer-hover\:border-blue-700 {
    &:is(:where(.peer):hover ~ *) {
      @media (hover: hover) {
        border-color: var(--color-blue-700);
      }
    }
  }
  .peer-hover\:bg-blue-700 {
    &:is(:where(.peer):hover ~ *) {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:-top-3 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * -3);
    }
  }
  .before\:top-0 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
  }
  .before\:top-1\/2 {
    &::before {
      content: var(--tw-content);
      top: calc(1/2 * 100%);
    }
  }
  .before\:top-1\/4 {
    &::before {
      content: var(--tw-content);
      top: calc(1/4 * 100%);
    }
  }
  .before\:bottom-0 {
    &::before {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
  }
  .before\:left-0 {
    &::before {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .before\:left-1 {
    &::before {
      content: var(--tw-content);
      left: calc(var(--spacing) * 1);
    }
  }
  .before\:left-1\/2 {
    &::before {
      content: var(--tw-content);
      left: calc(1/2 * 100%);
    }
  }
  .before\:-mt-2\.5 {
    &::before {
      content: var(--tw-content);
      margin-top: calc(var(--spacing) * -2.5);
    }
  }
  .before\:ml-6 {
    &::before {
      content: var(--tw-content);
      margin-left: calc(var(--spacing) * 6);
    }
  }
  .before\:block {
    &::before {
      content: var(--tw-content);
      display: block;
    }
  }
  .before\:h-0 {
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 0);
    }
  }
  .before\:h-5 {
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 5);
    }
  }
  .before\:min-h-full {
    &::before {
      content: var(--tw-content);
      min-height: 100%;
    }
  }
  .before\:w-0 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 0);
    }
  }
  .before\:w-5 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 5);
    }
  }
  .before\:w-full {
    &::before {
      content: var(--tw-content);
      width: 100%;
    }
  }
  .before\:-translate-x-1\/2 {
    &::before {
      content: var(--tw-content);
      --tw-translate-x: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .before\:translate-x-5 {
    &::before {
      content: var(--tw-content);
      --tw-translate-x: calc(var(--spacing) * 5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .before\:-translate-y-1\/2 {
    &::before {
      content: var(--tw-content);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .before\:transform {
    &::before {
      content: var(--tw-content);
      transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:border-x-\[0\.75rem\] {
    &::before {
      content: var(--tw-content);
      border-inline-style: var(--tw-border-style);
      border-inline-width: 0.75rem;
    }
  }
  .before\:border-t {
    &::before {
      content: var(--tw-content);
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
    }
  }
  .before\:border-t-0 {
    &::before {
      content: var(--tw-content);
      border-top-style: var(--tw-border-style);
      border-top-width: 0px;
    }
  }
  .before\:border-b-\[0\.75rem\] {
    &::before {
      content: var(--tw-content);
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0.75rem;
    }
  }
  .before\:border-l {
    &::before {
      content: var(--tw-content);
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
    }
  }
  .before\:border-dashed {
    &::before {
      content: var(--tw-content);
      --tw-border-style: dashed;
      border-style: dashed;
    }
  }
  .before\:border-dotted {
    &::before {
      content: var(--tw-content);
      --tw-border-style: dotted;
      border-style: dotted;
    }
  }
  .before\:border-solid {
    &::before {
      content: var(--tw-content);
      --tw-border-style: solid;
      border-style: solid;
    }
  }
  .before\:border-gray-300 {
    &::before {
      content: var(--tw-content);
      border-color: var(--color-gray-300);
    }
  }
  .before\:border-transparent {
    &::before {
      content: var(--tw-content);
      border-color: transparent;
    }
  }
  .before\:border-b-white {
    &::before {
      content: var(--tw-content);
      border-bottom-color: var(--color-white);
    }
  }
  .before\:bg-inherit {
    &::before {
      content: var(--tw-content);
      background-color: inherit;
    }
  }
  .before\:bg-white {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:top-0 {
    &::after {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
  }
  .after\:right-0 {
    &::after {
      content: var(--tw-content);
      right: calc(var(--spacing) * 0);
    }
  }
  .after\:bottom-0 {
    &::after {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
  }
  .after\:left-0 {
    &::after {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .after\:left-full {
    &::after {
      content: var(--tw-content);
      left: 100%;
    }
  }
  .after\:z-10 {
    &::after {
      content: var(--tw-content);
      z-index: 10;
    }
  }
  .after\:h-full {
    &::after {
      content: var(--tw-content);
      height: 100%;
    }
  }
  .after\:w-full {
    &::after {
      content: var(--tw-content);
      width: 100%;
    }
  }
  .after\:translate-x-full {
    &::after {
      content: var(--tw-content);
      --tw-translate-x: 100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .after\:transform {
    &::after {
      content: var(--tw-content);
      transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    }
  }
  .after\:bg-blue-400 {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-blue-400);
    }
  }
  .after\:bg-inherit {
    &::after {
      content: var(--tw-content);
      background-color: inherit;
    }
  }
  .after\:bg-gradient-to-r {
    &::after {
      content: var(--tw-content);
      --tw-gradient-position: to right in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }
  .after\:from-transparent {
    &::after {
      content: var(--tw-content);
      --tw-gradient-from: transparent;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .after\:via-white {
    &::after {
      content: var(--tw-content);
      --tw-gradient-via: var(--color-white);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }
  .after\:to-transparent {
    &::after {
      content: var(--tw-content);
      --tw-gradient-to: transparent;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .after\:delay-1000 {
    &::after {
      content: var(--tw-content);
      transition-delay: 1000ms;
    }
  }
  .first\:mt-2 {
    &:first-child {
      margin-top: calc(var(--spacing) * 2);
    }
  }
  .first\:mr-2 {
    &:first-child {
      margin-right: calc(var(--spacing) * 2);
    }
  }
  .first\:mb-2 {
    &:first-child {
      margin-bottom: calc(var(--spacing) * 2);
    }
  }
  .first\:ml-2 {
    &:first-child {
      margin-left: calc(var(--spacing) * 2);
    }
  }
  .first\:rounded-t-lg {
    &:first-child {
      border-top-left-radius: var(--radius-lg);
      border-top-right-radius: var(--radius-lg);
    }
  }
  .first\:rounded-l-lg {
    &:first-child {
      border-top-left-radius: var(--radius-lg);
      border-bottom-left-radius: var(--radius-lg);
    }
  }
  .first\:rounded-l-md {
    &:first-child {
      border-top-left-radius: var(--radius-md);
      border-bottom-left-radius: var(--radius-md);
    }
  }
  .first\:rounded-tr-none {
    &:first-child {
      border-top-right-radius: 0;
    }
  }
  .first\:rounded-br-none {
    &:first-child {
      border-bottom-right-radius: 0;
    }
  }
  .last\:mr-0 {
    &:last-child {
      margin-right: calc(var(--spacing) * 0);
    }
  }
  .last\:mb-0 {
    &:last-child {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .last\:rounded-tl-none {
    &:last-child {
      border-top-left-radius: 0;
    }
  }
  .last\:rounded-r-lg {
    &:last-child {
      border-top-right-radius: var(--radius-lg);
      border-bottom-right-radius: var(--radius-lg);
    }
  }
  .last\:rounded-r-md {
    &:last-child {
      border-top-right-radius: var(--radius-md);
      border-bottom-right-radius: var(--radius-md);
    }
  }
  .last\:rounded-b-lg {
    &:last-child {
      border-bottom-right-radius: var(--radius-lg);
      border-bottom-left-radius: var(--radius-lg);
    }
  }
  .last\:rounded-br-lg {
    &:last-child {
      border-bottom-right-radius: var(--radius-lg);
    }
  }
  .last\:rounded-bl-lg {
    &:last-child {
      border-bottom-left-radius: var(--radius-lg);
    }
  }
  .last\:rounded-bl-none {
    &:last-child {
      border-bottom-left-radius: 0;
    }
  }
  .last\:border-r {
    &:last-child {
      border-right-style: var(--tw-border-style);
      border-right-width: 1px;
    }
  }
  .hover\:mx-6 {
    &:hover {
      @media (hover: hover) {
        margin-inline: calc(var(--spacing) * 6);
      }
    }
  }
  .hover\:my-6 {
    &:hover {
      @media (hover: hover) {
        margin-block: calc(var(--spacing) * 6);
      }
    }
  }
  .hover\:scale-150 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 150%;
        --tw-scale-y: 150%;
        --tw-scale-z: 150%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:cursor-pointer {
    &:hover {
      @media (hover: hover) {
        cursor: pointer;
      }
    }
  }
  .hover\:border {
    &:hover {
      @media (hover: hover) {
        border-style: var(--tw-border-style);
        border-width: 1px;
      }
    }
  }
  .hover\:border-blue-500 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-blue-500);
      }
    }
  }
  .hover\:border-blue-600 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-blue-600);
      }
    }
  }
  .hover\:border-cyan-500 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-cyan-500);
      }
    }
  }
  .hover\:border-gray-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-300);
      }
    }
  }
  .hover\:border-gray-400 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-400);
      }
    }
  }
  .hover\:border-gray-600 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-600);
      }
    }
  }
  .hover\:border-green-600 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-green-600);
      }
    }
  }
  .hover\:border-orange-600 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-orange-600);
      }
    }
  }
  .hover\:border-primary {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary);
      }
    }
  }
  .hover\:border-purple-600 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-purple-600);
      }
    }
  }
  .hover\:border-red-500\/80 {
    &:hover {
      @media (hover: hover) {
        border-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-red-500) 80%, transparent);
        }
      }
    }
  }
  .hover\:border-red-600 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-red-600);
      }
    }
  }
  .hover\:border-transparent {
    &:hover {
      @media (hover: hover) {
        border-color: transparent;
      }
    }
  }
  .hover\:bg-black {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-black);
      }
    }
  }
  .hover\:bg-blue-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-200);
      }
    }
  }
  .hover\:bg-blue-300\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(80.9% 0.105 251.813) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-300) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-blue-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-500);
      }
    }
  }
  .hover\:bg-blue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600);
      }
    }
  }
  .hover\:bg-gray-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:bg-gray-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-300);
      }
    }
  }
  .hover\:bg-gray-300\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(87.2% 0.01 258.338) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-gray-300) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-gray-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-600);
      }
    }
  }
  .hover\:bg-gray-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-800);
      }
    }
  }
  .hover\:bg-green-300\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(87.1% 0.15 154.449) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-green-300) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-green-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-600);
      }
    }
  }
  .hover\:bg-orange-300\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(83.7% 0.128 66.29) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-orange-300) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-orange-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-600);
      }
    }
  }
  .hover\:bg-purple-300\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(82.7% 0.119 306.383) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-purple-300) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-purple-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-600);
      }
    }
  }
  .hover\:bg-red-300\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(80.8% 0.114 19.571) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-red-300) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-red-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600);
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:bg-white\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-white\/30 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
        }
      }
    }
  }
  .hover\:text-blue-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-400);
      }
    }
  }
  .hover\:text-blue-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-500);
      }
    }
  }
  .hover\:text-gray-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-600);
      }
    }
  }
  .hover\:text-gray-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-700);
      }
    }
  }
  .hover\:text-gray-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-800);
      }
    }
  }
  .hover\:text-gray-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
  }
  .hover\:text-slate-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-700);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:no-underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .hover\:transition-opacity {
    &:hover {
      @media (hover: hover) {
        transition-property: opacity;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
      }
    }
  }
  .hover\:duration-300 {
    &:hover {
      @media (hover: hover) {
        --tw-duration: 300ms;
        transition-duration: 300ms;
      }
    }
  }
  .focus\:border-blue-300 {
    &:focus {
      border-color: var(--color-blue-300);
    }
  }
  .focus\:border-cyan-500 {
    &:focus {
      border-color: var(--color-cyan-500);
    }
  }
  .focus\:border-red-500 {
    &:focus {
      border-color: var(--color-red-500);
    }
  }
  .focus\:focus\:shadow-\[inset_0_0_0_0\.2rem_rgba\(191\,219\,254\,1\)\] {
    &:focus {
      &:focus {
        --tw-shadow: inset 0 0 0 0.2rem var(--tw-shadow-color, rgba(191,219,254,1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .focus\:shadow-\[0_0_0_0\.2rem_\#a5f3fc\] {
    &:focus {
      --tw-shadow: 0 0 0 0.2rem var(--tw-shadow-color, #a5f3fc);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[0_0_0_0\.2rem_rgba\(191\,219\,254\,1\)\] {
    &:focus {
      --tw-shadow: 0 0 0 0.2rem var(--tw-shadow-color, rgba(191,219,254,1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[0_0_0_2px_rgba\(255\,255\,255\,1\)\,0_0_0_4px_rgba\(136\,234\,172\,1\)\,0_1px_2px_0_rgba\(0\,0\,0\,1\)\] {
    &:focus {
      --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(255,255,255,1)), 0 0 0 4px var(--tw-shadow-color, rgba(136,234,172,1)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[0_0_0_2px_rgba\(255\,255\,255\,1\)\,0_0_0_4px_rgba\(157\,193\,251\,1\)\,0_1px_2px_0_rgba\(0\,0\,0\,1\)\] {
    &:focus {
      --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(255,255,255,1)), 0 0 0 4px var(--tw-shadow-color, rgba(157,193,251,1)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[0_0_0_2px_rgba\(255\,255\,255\,1\)\,0_0_0_4px_rgba\(176\,185\,198\,1\)\,0_1px_2px_0_rgba\(0\,0\,0\,1\)\] {
    &:focus {
      --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(255,255,255,1)), 0 0 0 4px var(--tw-shadow-color, rgba(176,185,198,1)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[0_0_0_2px_rgba\(255\,255\,255\,1\)\,0_0_0_4px_rgba\(212\,170\,251\,1\)\,0_1px_2px_0_rgba\(0\,0\,0\,1\)\] {
    &:focus {
      --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(255,255,255,1)), 0 0 0 4px var(--tw-shadow-color, rgba(212,170,251,1)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[0_0_0_2px_rgba\(255\,255\,255\,1\)\,0_0_0_4px_rgba\(247\,162\,162\,1\)\,0_1px_2px_0_rgba\(0\,0\,0\,1\)\] {
    &:focus {
      --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(255,255,255,1)), 0 0 0 4px var(--tw-shadow-color, rgba(247,162,162,1)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[0_0_0_2px_rgba\(255\,255\,255\,1\)\,0_0_0_4px_rgba\(250\,207\,133\,1\)\,0_1px_2px_0_rgba\(0\,0\,0\,1\)\] {
    &:focus {
      --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(255,255,255,1)), 0 0 0 4px var(--tw-shadow-color, rgba(250,207,133,1)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[inset_0_0_0_0\.2rem_rgba\(191\,219\,254\,1\)\] {
    &:focus {
      --tw-shadow: inset 0 0 0 0.2rem var(--tw-shadow-color, rgba(191,219,254,1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-none {
    &:focus {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-gray-200 {
    &:focus {
      --tw-ring-color: var(--color-gray-200);
    }
  }
  .focus\:outline {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus\:outline-0 {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 0px;
    }
  }
  .focus\:outline-\[0\.15rem\] {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 0.15rem;
    }
  }
  .focus\:outline-offset-0 {
    &:focus {
      outline-offset: 0px;
    }
  }
  .focus\:outline-offset-\[-0\.15rem\] {
    &:focus {
      outline-offset: -0.15rem;
    }
  }
  .focus\:outline-blue-200 {
    &:focus {
      outline-color: var(--color-blue-200);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .min-\[0px\]\:flex {
    @media (width >= 0px) {
      display: flex;
    }
  }
  .min-\[0px\]\:text-sm {
    @media (width >= 0px) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .sm\:absolute {
    @media (width >= 40rem) {
      position: absolute;
    }
  }
  .sm\:relative {
    @media (width >= 40rem) {
      position: relative;
    }
  }
  .sm\:top-0 {
    @media (width >= 40rem) {
      top: calc(var(--spacing) * 0);
    }
  }
  .sm\:top-auto {
    @media (width >= 40rem) {
      top: auto;
    }
  }
  .sm\:left-auto {
    @media (width >= 40rem) {
      left: auto;
    }
  }
  .sm\:left-full {
    @media (width >= 40rem) {
      left: 100%;
    }
  }
  .sm\:ml-2 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 2);
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:w-48 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 48);
    }
  }
  .sm\:w-auto {
    @media (width >= 40rem) {
      width: auto;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:bg-transparent {
    @media (width >= 40rem) {
      background-color: transparent;
    }
  }
  .sm\:p-0 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .sm\:pl-5 {
    @media (width >= 40rem) {
      padding-left: calc(var(--spacing) * 5);
    }
  }
  .sm\:shadow-md {
    @media (width >= 40rem) {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .sm\:shadow-none {
    @media (width >= 40rem) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .md\:mx-5 {
    @media (width >= 48rem) {
      margin-inline: calc(var(--spacing) * 5);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:w-1\/2 {
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
  }
  .md\:w-56 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 56);
    }
  }
  .md\:w-80 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 80);
    }
  }
  .md\:w-\[25rem\] {
    @media (width >= 48rem) {
      width: 25rem;
    }
  }
  .md\:w-auto {
    @media (width >= 48rem) {
      width: auto;
    }
  }
  .md\:w-full {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:justify-end {
    @media (width >= 48rem) {
      justify-content: flex-end;
    }
  }
  .md\:space-x-2 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .md\:border-l {
    @media (width >= 48rem) {
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .xl\:mb-2 {
    @media (width >= 80rem) {
      margin-bottom: calc(var(--spacing) * 2);
    }
  }
  .xl\:flex-col {
    @media (width >= 80rem) {
      flex-direction: column;
    }
  }
  .xl\:flex-row {
    @media (width >= 80rem) {
      flex-direction: row;
    }
  }
  .rtl\:rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: 180deg;
    }
  }
  .rtl\:space-x-reverse {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 1;
      }
    }
  }
  .dark\:border {
    &:where(.dark, .dark *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .dark\:border-blue-300 {
    &:where(.dark, .dark *) {
      border-color: var(--color-blue-300);
    }
  }
  .dark\:border-blue-400 {
    &:where(.dark, .dark *) {
      border-color: var(--color-blue-400);
    }
  }
  .dark\:border-blue-900\/40 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-blue-900) 40%, transparent);
      }
    }
  }
  .dark\:border-gray-400 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-400);
    }
  }
  .dark\:border-gray-900 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-900);
    }
  }
  .dark\:border-green-400 {
    &:where(.dark, .dark *) {
      border-color: var(--color-green-400);
    }
  }
  .dark\:border-orange-400 {
    &:where(.dark, .dark *) {
      border-color: var(--color-orange-400);
    }
  }
  .dark\:border-purple-400 {
    &:where(.dark, .dark *) {
      border-color: var(--color-purple-400);
    }
  }
  .dark\:border-red-400 {
    &:where(.dark, .dark *) {
      border-color: var(--color-red-400);
    }
  }
  .dark\:border-sky-300 {
    &:where(.dark, .dark *) {
      border-color: var(--color-sky-300);
    }
  }
  .dark\:bg-blue-300 {
    &:where(.dark, .dark *) {
      background-color: var(--color-blue-300);
    }
  }
  .dark\:bg-blue-300\/20 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(80.9% 0.105 251.813) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-300) 20%, transparent);
      }
    }
  }
  .dark\:bg-blue-400 {
    &:where(.dark, .dark *) {
      background-color: var(--color-blue-400);
    }
  }
  .dark\:bg-blue-500\/40 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-500) 40%, transparent);
      }
    }
  }
  .dark\:bg-blue-900\/40 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-900) 40%, transparent);
      }
    }
  }
  .dark\:bg-gray-400 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-400);
    }
  }
  .dark\:bg-gray-600 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-600);
    }
  }
  .dark\:bg-gray-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-700);
    }
  }
  .dark\:bg-gray-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-800);
    }
  }
  .dark\:bg-gray-800\/90 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(27.8% 0.033 256.848) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-800) 90%, transparent);
      }
    }
  }
  .dark\:bg-gray-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-900);
    }
  }
  .dark\:bg-gray-950 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-950);
    }
  }
  .dark\:bg-gray-950\/40 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(13% 0.028 261.692) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 40%, transparent);
      }
    }
  }
  .dark\:bg-green-400 {
    &:where(.dark, .dark *) {
      background-color: var(--color-green-400);
    }
  }
  .dark\:bg-orange-400 {
    &:where(.dark, .dark *) {
      background-color: var(--color-orange-400);
    }
  }
  .dark\:bg-purple-400 {
    &:where(.dark, .dark *) {
      background-color: var(--color-purple-400);
    }
  }
  .dark\:bg-red-400 {
    &:where(.dark, .dark *) {
      background-color: var(--color-red-400);
    }
  }
  .dark\:bg-sky-300 {
    &:where(.dark, .dark *) {
      background-color: var(--color-sky-300);
    }
  }
  .dark\:bg-transparent {
    &:where(.dark, .dark *) {
      background-color: transparent;
    }
  }
  .dark\:stroke-gray-700 {
    &:where(.dark, .dark *) {
      stroke: var(--color-gray-700);
    }
  }
  .dark\:text-blue-300 {
    &:where(.dark, .dark *) {
      color: var(--color-blue-300);
    }
  }
  .dark\:text-blue-400 {
    &:where(.dark, .dark *) {
      color: var(--color-blue-400);
    }
  }
  .dark\:text-gray-400 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-400);
    }
  }
  .dark\:text-gray-600 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-600);
    }
  }
  .dark\:text-gray-900 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-900);
    }
  }
  .dark\:text-green-400 {
    &:where(.dark, .dark *) {
      color: var(--color-green-400);
    }
  }
  .dark\:text-orange-400 {
    &:where(.dark, .dark *) {
      color: var(--color-orange-400);
    }
  }
  .dark\:text-purple-400 {
    &:where(.dark, .dark *) {
      color: var(--color-purple-400);
    }
  }
  .dark\:text-red-400 {
    &:where(.dark, .dark *) {
      color: var(--color-red-400);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:text-white\/60 {
    &:where(.dark, .dark *) {
      color: color-mix(in srgb, #fff 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-white) 60%, transparent);
      }
    }
  }
  .dark\:text-white\/70 {
    &:where(.dark, .dark *) {
      color: color-mix(in srgb, #fff 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-white) 70%, transparent);
      }
    }
  }
  .dark\:text-white\/80 {
    &:where(.dark, .dark *) {
      color: color-mix(in srgb, #fff 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-white) 80%, transparent);
      }
    }
  }
  .dark\:shadow-\[0_0_0_0\.2rem_rgba\(147\,197\,253\,0\.5\)\] {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 0 0 0.2rem var(--tw-shadow-color, rgba(147,197,253,0.5));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .before\:dark\:border-blue-900\/40 {
    &::before {
      content: var(--tw-content);
      &:where(.dark, .dark *) {
        border-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 40%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-blue-900) 40%, transparent);
        }
      }
    }
  }
  .dark\:before\:border-b-gray-900 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        border-bottom-color: var(--color-gray-900);
      }
    }
  }
  .before\:dark\:bg-gray-900 {
    &::before {
      content: var(--tw-content);
      &:where(.dark, .dark *) {
        background-color: var(--color-gray-900);
      }
    }
  }
  .dark\:hover\:border-blue-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-blue-300);
        }
      }
    }
  }
  .dark\:hover\:border-blue-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-blue-400);
        }
      }
    }
  }
  .dark\:hover\:border-blue-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-blue-500);
        }
      }
    }
  }
  .dark\:hover\:border-gray-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-gray-500);
        }
      }
    }
  }
  .dark\:hover\:border-green-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-green-500);
        }
      }
    }
  }
  .dark\:hover\:border-orange-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-orange-500);
        }
      }
    }
  }
  .dark\:hover\:border-purple-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-purple-500);
        }
      }
    }
  }
  .dark\:hover\:border-red-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-red-500);
        }
      }
    }
  }
  .dark\:hover\:border-transparent {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: transparent;
        }
      }
    }
  }
  .dark\:hover\:bg-blue-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-500);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-500);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-600 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-600);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-700 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-700);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-800 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-800);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-800\/60 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(27.8% 0.033 256.848) 60%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-gray-800) 60%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-gray-800\/70 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(27.8% 0.033 256.848) 70%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-gray-800) 70%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-gray-800\/80 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(27.8% 0.033 256.848) 80%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-gray-800) 80%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-gray-950 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-950);
        }
      }
    }
  }
  .dark\:hover\:bg-green-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-green-500);
        }
      }
    }
  }
  .dark\:hover\:bg-orange-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-orange-500);
        }
      }
    }
  }
  .dark\:hover\:bg-purple-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-purple-500);
        }
      }
    }
  }
  .dark\:hover\:bg-red-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-red-500);
        }
      }
    }
  }
  .hover\:dark\:bg-gray-700 {
    &:hover {
      @media (hover: hover) {
        &:where(.dark, .dark *) {
          background-color: var(--color-gray-700);
        }
      }
    }
  }
  .dark\:hover\:text-white\/70 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: color-mix(in srgb, #fff 70%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-white) 70%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:text-white\/80 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: color-mix(in srgb, #fff 80%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-white) 80%, transparent);
          }
        }
      }
    }
  }
  .dark\:focus\:shadow-\[0_0_0_0\.2rem_rgba\(147\,197\,253\,0\.5\)\] {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-shadow: 0 0 0 0.2rem var(--tw-shadow-color, rgba(147,197,253,0.5));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:shadow-\[0_0_0_2px_rgba\(28\,33\,39\,1\)\,0_0_0_4px_rgba\(134\,239\,172\,0\.7\)\,0_1px_2px_0_rgba\(0\,0\,0\,0\)\] {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(28,33,39,1)), 0 0 0 4px var(--tw-shadow-color, rgba(134,239,172,0.7)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,0));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:shadow-\[0_0_0_2px_rgba\(28\,33\,39\,1\)\,0_0_0_4px_rgba\(147\,197\,253\,0\.7\)\,0_1px_2px_0_rgba\(0\,0\,0\,0\)\] {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(28,33,39,1)), 0 0 0 4px var(--tw-shadow-color, rgba(147,197,253,0.7)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,0));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:shadow-\[0_0_0_2px_rgba\(28\,33\,39\,1\)\,0_0_0_4px_rgba\(203\,213\,225\,0\.7\)\,0_1px_2px_0_rgba\(0\,0\,0\,0\)\] {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(28,33,39,1)), 0 0 0 4px var(--tw-shadow-color, rgba(203,213,225,0.7)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,0));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:shadow-\[0_0_0_2px_rgba\(28\,33\,39\,1\)\,0_0_0_4px_rgba\(216\,180\,254\,0\.7\)\,0_1px_2px_0_rgba\(0\,0\,0\,0\)\] {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(28,33,39,1)), 0 0 0 4px var(--tw-shadow-color, rgba(216,180,254,0.7)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,0));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:shadow-\[0_0_0_2px_rgba\(28\,33\,39\,1\)\,0_0_0_4px_rgba\(252\,165\,165\,0\.7\)\,0_1px_2px_0_rgba\(0\,0\,0\,0\)\] {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(28,33,39,1)), 0 0 0 4px var(--tw-shadow-color, rgba(252,165,165,0.7)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,0));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:shadow-\[0_0_0_2px_rgba\(28\,33\,39\,1\)\,0_0_0_4px_rgba\(252\,211\,77\,0\.7\)\,0_1px_2px_0_rgba\(0\,0\,0\,0\)\] {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(28,33,39,1)), 0 0 0 4px var(--tw-shadow-color, rgba(252,211,77,0.7)), 0 1px 2px 0 var(--tw-shadow-color, rgba(0,0,0,0));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:shadow-\[inset_0_0_0_0\.2rem_rgba\(147\,197\,253\,0\.5\)\] {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-shadow: inset 0 0 0 0.2rem var(--tw-shadow-color, rgba(147,197,253,0.5));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:ring-gray-600 {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-ring-color: var(--color-gray-600);
      }
    }
  }
  .dark\:focus\:outline {
    &:where(.dark, .dark *) {
      &:focus {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
      }
    }
  }
  .dark\:focus\:outline-\[0\.15rem\] {
    &:where(.dark, .dark *) {
      &:focus {
        outline-style: var(--tw-outline-style);
        outline-width: 0.15rem;
      }
    }
  }
  .dark\:focus\:outline-offset-\[-0\.15rem\] {
    &:where(.dark, .dark *) {
      &:focus {
        outline-offset: -0.15rem;
      }
    }
  }
  .dark\:focus\:outline-blue-300 {
    &:where(.dark, .dark *) {
      &:focus {
        outline-color: var(--color-blue-300);
      }
    }
  }
  .\[\&_\*\]\:whitespace-normal {
    & * {
      white-space: normal;
    }
  }
  .\[\&\:\:-webkit-scrollbar\]\:hidden {
    &::-webkit-scrollbar {
      display: none;
    }
  }
  .\[\&\>div\[data-pc-name\=\"dropdown\"\]\[data-p-focus\=\"false\"\]\~label\]\:-top-3 {
    &>div[data-pc-name="dropdown"][data-p-focus="false"]~label {
      top: calc(var(--spacing) * -3);
    }
  }
  .\[\&\>div\[data-pc-name\=\"dropdown\"\]\[data-p-focus\=\"false\"\]\~label\]\:text-xs {
    &>div[data-pc-name="dropdown"][data-p-focus="false"]~label {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\[\&\>input\.p-filled\~label\]\:-top-3 {
    &>input.p-filled~label {
      top: calc(var(--spacing) * -3);
    }
  }
  .\[\&\>input\.p-filled\~label\]\:text-xs {
    &>input.p-filled~label {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\[\&\>input\:\:placeholder\]\:opacity-0 {
    &>input::placeholder {
      opacity: 0%;
    }
  }
  .\[\&\>input\:\:placeholder\]\:transition-all {
    &>input::placeholder {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\[\&\>input\:\:placeholder\]\:ease-in-out {
    &>input::placeholder {
      --tw-ease: var(--ease-in-out);
      transition-timing-function: var(--ease-in-out);
    }
  }
  .\[\&\>input\:\:placeholder\:focus\]\:opacity-100 {
    &>input::placeholder:focus {
      opacity: 100%;
    }
  }
  .\[\&\>input\:\:placeholder\:focus\]\:transition-all {
    &>input::placeholder:focus {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\[\&\>input\:\:placeholder\:focus\]\:ease-in-out {
    &>input::placeholder:focus {
      --tw-ease: var(--ease-in-out);
      transition-timing-function: var(--ease-in-out);
    }
  }
  .\[\&\>input\:autofill\~label\]\:-top-3 {
    &>input:autofill~label {
      top: calc(var(--spacing) * -3);
    }
  }
  .\[\&\>input\:autofill\~label\]\:text-xs {
    &>input:autofill~label {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\[\&\>input\:focus\~label\]\:-top-3 {
    &>input:focus~label {
      top: calc(var(--spacing) * -3);
    }
  }
  .\[\&\>input\:focus\~label\]\:text-xs {
    &>input:focus~label {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\[\&\>label\]\:pointer-events-none {
    &>label {
      pointer-events: none;
    }
  }
  .\[\&\>label\]\:absolute {
    &>label {
      position: absolute;
    }
  }
  .\[\&\>label\]\:top-1\/2 {
    &>label {
      top: calc(1/2 * 100%);
    }
  }
  .\[\&\>label\]\:left-2 {
    &>label {
      left: calc(var(--spacing) * 2);
    }
  }
  .\[\&\>label\]\:-mt-2 {
    &>label {
      margin-top: calc(var(--spacing) * -2);
    }
  }
  .\[\&\>label\]\:leading-none {
    &>label {
      --tw-leading: 1;
      line-height: 1;
    }
  }
  .\[\&\>label\]\:transition-all {
    &>label {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\[\&\>label\]\:ease-in-out {
    &>label {
      --tw-ease: var(--ease-in-out);
      transition-timing-function: var(--ease-in-out);
    }
  }
  .\[\&\>textarea\.p-filled\~label\]\:-top-3 {
    &>textarea.p-filled~label {
      top: calc(var(--spacing) * -3);
    }
  }
  .\[\&\>textarea\.p-filled\~label\]\:text-xs {
    &>textarea.p-filled~label {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\[\&\>textarea\:focus\~label\]\:-top-3 {
    &>textarea:focus~label {
      top: calc(var(--spacing) * -3);
    }
  }
  .\[\&\>textarea\:focus\~label\]\:text-xs {
    &>textarea:focus~label {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\[\&\>textarea\~label\]\:top-4 {
    &>textarea~label {
      top: calc(var(--spacing) * 4);
    }
  }
}
@layer hubleto-framework {
  html {
    font-family: var(--font-sans) !important;
    color: var(--color-gray-800);
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-950);
    }
  }
  a {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  a[role=button] {
    margin: calc(var(--spacing) * 2);
    display: inline-block;
    cursor: pointer;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-50);
    background-color: var(--color-white);
    padding: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
  }
  h1 {
    margin-top: calc(var(--spacing) * 4);
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    color: var(--color-primary);
  }
  h2 {
    margin-bottom: calc(var(--spacing) * 2);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    color: var(--color-primary);
  }
  input, select, textarea {
    border-radius: 0.25rem;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-slate-500);
    background-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
    padding: calc(var(--spacing) * 1);
  }
  aside#default-sidebar {
    position: fixed;
    top: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    z-index: 10;
    margin-top: calc(var(--spacing) * 12);
    display: flex;
    height: 100%;
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    @media (width >= 48rem) {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  aside#default-sidebar > nav {
    display: flex;
    width: calc(var(--spacing) * 36);
    flex-direction: column;
    gap: calc(var(--spacing) * 0.5);
    background-color: var(--color-primary);
    padding: calc(var(--spacing) * 1);
    &:where(.dark, .dark *) {
      border-right-style: var(--tw-border-style);
      border-right-width: 1px;
    }
    &:where(.dark, .dark *) {
      border-right-color: var(--color-slate-800);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-900);
    }
  }
  aside#default-sidebar > nav .btn {
    width: 100%;
    border-radius: 0.25rem;
    background-color: transparent;
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
    &:where(.dark, .dark *) {
      background-color: transparent;
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-primary);
        }
      }
    }
  }
  aside#default-sidebar > nav .btn .icon {
    display: flex;
    width: calc(var(--spacing) * 6);
    flex-wrap: wrap;
    align-content: center;
    justify-content: center;
    --tw-border-style: none;
    border-style: none;
    background-color: transparent;
    text-align: left;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  aside#default-sidebar > nav .btn .text {
    --tw-border-style: none;
    border-style: none;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  aside#default-sidebar > nav .btn.btn-active {
    background-color: var(--color-white);
    color: var(--color-gray-800);
    &:where(.dark, .dark *) {
      background-color: var(--color-primary);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #4780bf 80%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 80%, transparent);
          }
        }
      }
    }
  }
  aside#default-sidebar > div {
    height: 100%;
    width: calc(var(--spacing) * 48);
    overflow-y: auto;
    background-color: var(--color-gray-50);
    padding: calc(var(--spacing) * 1);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  aside#default-sidebar > div > ul > li a {
    display: flex;
    align-items: center;
    border-radius: 0.25rem;
    padding-inline: calc(var(--spacing) * 1);
    padding-block: calc(var(--spacing) * 0.5);
    color: var(--color-gray-900);
    text-decoration-line: none;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  aside#default-sidebar > div > ul a .icon {
    display: block;
    width: calc(var(--spacing) * 8);
    text-align: center;
  }
  aside#default-sidebar > div > ul a .text {
    display: block;
  }
  aside#default-sidebar > div > ul > li > ul > li {
    margin-left: calc(var(--spacing) * 1);
  }
  aside#default-sidebar > div > ul > li > ul > li > ul > li {
    margin-left: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  aside#default-sidebar > div > ul > li > ul > li > ul > li > ul > li {
    margin-left: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  aside#default-sidebar > div > ul > li > ul > li > ul > li > ul > li > ul > li {
    margin-left: calc(var(--spacing) * 4);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  nav#default-navbar {
    position: fixed;
    inset-inline-start: calc(var(--spacing) * 0);
    top: calc(var(--spacing) * 0);
    z-index: 20;
    width: 100%;
    background-color: var(--color-white);
  }
  nav#default-navbar > div {
    margin: calc(var(--spacing) * 0);
    display: flex;
    width: 100vw;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
    padding: calc(var(--spacing) * 2);
    &:where(.dark, .dark *) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
    &:where(.dark, .dark *) {
      border-bottom-color: var(--color-slate-700);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-900);
    }
  }
  nav#default-navbar .btn {
    --tw-shadow: 0 0 #0000 !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
  }
  div#sign-in-screen {
    display: flex;
    width: 100%;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding-top: calc(var(--spacing) * 4);
    @media (width >= 48rem) {
      height: 100vh;
    }
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  div#sign-in-screen > .languages {
    width: 100%;
    text-align: right;
    @media (width >= 40rem) {
      width: calc(5/6 * 100%);
    }
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
  }
  div#sign-in-screen > .inner {
    display: flex;
    width: 100%;
    flex-direction: column;
    align-items: center;
    border-radius: var(--radius-lg);
    border-color: var(--color-slate-200);
    padding: calc(var(--spacing) * 10);
    @media (width >= 40rem) {
      width: calc(5/6 * 100%);
    }
    @media (width >= 40rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
    @media (width >= 40rem) {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
  }
  div#sign-in-screen > .inner > .logo {
    display: flex;
    flex: 1;
    align-items: center;
    justify-content: center;
  }
  div#sign-in-screen > .inner > .form {
    width: 100%;
    max-width: 400px;
    flex: 1;
    --tw-border-style: none;
    border-style: none;
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  div#sign-in-screen > .inner > .form > .title {
    text-align: center;
  }
  div#sign-in-screen > .inner > .form > .content > input {
    margin-bottom: calc(var(--spacing) * 1);
    width: 100%;
    border-radius: var(--radius-sm);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-300);
    padding: calc(var(--spacing) * 4);
  }
  div#app-main-content {
    margin-top: calc(var(--spacing) * 12);
    padding-inline: calc(var(--spacing) * 3);
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 0);
    }
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 64);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-950);
    }
  }
  div#app-main-content.sidebar-only-nav {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 36);
    }
  }
}
body.react-elements-rendering #app-main-content {
  display: none;
}
body.react-elements-rendered #app-main-content {
  display: block;
}
body #logo {
  transition: 250ms;
  transition-delay: 300ms;
}
body.ajax-loading #logo {
  transform: rotate(25deg);
}
.swal2-html-title {
  text-align: left;
}
.swal2-html-container {
  text-align: left;
}
@layer hubleto-framework {
  .hubleto.component.table {
    width: 100%;
  }
  .hubleto.component.table.loading {
    opacity: 0.25;
  }
  .hubleto.component.table .table-header {
    margin-bottom: calc(var(--spacing) * 2);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    gap: calc(var(--spacing) * 2);
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .hubleto.component.table .table-header-left {
    display: flex;
    width: 100%;
    flex: 1;
    align-items: center;
    gap: calc(var(--spacing) * 1);
  }
  .hubleto.component.table .table-header-title {
    margin-right: calc(var(--spacing) * 2);
    flex: 1;
    text-align: center;
    text-align: left;
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    color: var(--color-primary);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .hubleto.component.table .table-header-right {
    display: flex;
    flex: 1;
    justify-content: flex-end;
    gap: calc(var(--spacing) * 1);
    text-align: center;
  }
  .hubleto.component.table .table-header-search {
    display: flex;
    width: 100%;
    flex: 4;
    gap: calc(var(--spacing) * 2);
    border-radius: 0;
    border-color: var(--color-slate-200);
    padding: calc(var(--spacing) * 1);
    &:where(.dark, .dark *) {
      border-color: var(--color-slate-600);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-950);
    }
  }
  .hubleto.component.table .table-header-search.active {
    background-color: var(--color-yellow-50);
  }
  .hubleto.component.table .table-body {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-slate-200);
    &:where(.dark, .dark *) {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .hubleto.component.table .table-body tr {
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 0;
      border-inline-style: var(--tw-border-style);
      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    }
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
    box-sizing: border-box;
  }
  .hubleto.component.table .table-body tr:hover td {
    background-color: var(--color-gray-100);
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-800);
    }
  }
  .hubleto.component.table .table-body thead th td {
    padding: calc(var(--spacing) * 0.5);
    margin: 1px;
  }
  .hubleto.component.table .table-body thead th td {
    padding: calc(var(--spacing) * 0.5);
    margin: 1px;
  }
  .hubleto.component.table .table-body tbody tr td {
    padding: calc(var(--spacing) * 0.5);
    margin: 1px;
  }
  .hubleto.component.table .table-body tbody tr td .inline-edit-icon {
    visibility: hidden;
    cursor: pointer;
  }
  .hubleto.component.table .table-body tbody tr td:hover .inline-edit-icon {
    visibility: visible;
  }
  .hubleto.component.table .table-body tr.highlighted {
    :where(& > :not(:last-child)) {
      --tw-border-style: none;
      border-style: none;
    }
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
    border-left-color: var(--color-primary);
    color: var(--color-primary);
  }
  .hubleto.component.table .table-body tr.highlighted td:nth-child(1) > div {
    padding-left: calc(var(--spacing) * 2);
  }
  .hubleto.component.table .table-body tr td {
    cursor: pointer;
  }
  .hubleto.component.input.table {
    max-width: 100%;
  }
  .hubleto.component.table.header-style-1 {
    background-color: var(--color-green-50);
  }
  .hubleto.component.table .table-body tbody tr td .to-be-deleted {
    background-color: var(--color-red-500);
  }
  .hubleto.component.table .table-body tbody tr td .to-be-deleted input {
    color: var(--color-red-500);
  }
  .hubleto.component.table .table-cell-content {
    max-width: calc(var(--spacing) * 48);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    white-space: nowrap;
    @media (width >= 48rem) {
      max-width: none;
    }
  }
  .hubleto.component.table .table-cell-content.column-lookup {
    color: var(--color-primary);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .hubleto.component.table .table-cell-content.column-int {
    text-align: right;
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .hubleto.component.table .table-cell-content.column-float {
    text-align: right;
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .hubleto.component.table .table-cell-content.column-date {
    text-align: right;
  }
  .hubleto.component.table .table-cell-content.column-datetime {
    text-align: right;
  }
  .hubleto.component.table .table-cell-content.column-boolean {
    text-align: center;
  }
  .hubleto.component.table .table-sidebar-filter {
    display: none;
    @media (width >= 48rem) {
      display: block;
    }
  }
  .hubleto.component.table .column-search .input-element {
    background-color: var(--color-white);
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-800);
    }
  }
  .hubleto.component.input {
    display: inline-flex;
    width: 100%;
    align-items: center;
    justify-content: space-between;
  }
  .hubleto.component.input input, .hubleto.component.input textarea, .hubleto.component.input select {
    display: flex;
    width: 100%;
    flex: 1;
    border-radius: var(--radius-sm);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-slate-200);
    padding: calc(var(--spacing) * 0.5);
    &:where(.dark, .dark *) {
      border-color: var(--color-slate-500);
    }
  }
  .hubleto.component.input.int input {
    max-width: 160px;
  }
  .hubleto.component.input.date input {
    max-width: 160px;
  }
  .hubleto.component.input.datetime input {
    max-width: 160px;
  }
  .hubleto.component.input .inner {
    display: flex;
    width: 100%;
    align-items: center;
    gap: calc(var(--spacing) * 1);
    border-radius: 0.25rem;
  }
  .hubleto.component.input .inner .value-element {
    margin-right: calc(var(--spacing) * 1);
    display: inline-flex;
    flex: 1;
    align-items: center;
    padding-right: calc(var(--spacing) * 1);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    min-height: 1.5rem;
  }
  .hubleto.component.input .inner .input-element {
    margin-right: calc(var(--spacing) * 1);
    display: flex;
    flex: 1;
    flex-direction: row;
    align-items: center;
    gap: calc(var(--spacing) * 1);
    padding-right: calc(var(--spacing) * 1);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    min-height: 1.5rem;
  }
  .hubleto.component.input .inner .value-element .no-value {
    color: var(--color-gray-300);
    font-style: italic;
    &::after {
      content: var(--tw-content);
      --tw-content: 'N/A';
      content: var(--tw-content);
    }
  }
  .hubleto.component.input .inner .inline-editing-buttons {
    visibility: hidden;
    display: flex;
    flex: 1;
    gap: calc(var(--spacing) * 1);
  }
  .hubleto.component.input .inner .inline-editing-buttons.always-visible {
    visibility: visible !important;
  }
  .hubleto.component.input .inner .btn {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .hubleto.component.input .inner:hover .inline-editing-buttons {
    visibility: visible !important;
  }
  .hubleto.component.input .input-after {
    margin-left: calc(var(--spacing) * 2);
    flex: 1;
  }
  .hubleto.component.input .input-unit {
    margin-left: calc(var(--spacing) * 2);
    flex: 1;
  }
}
@layer hubleto-framework {
  #app-main-content > * > .hubleto.component.table .table-body thead th:nth-child(n+4) {
    display: none;
    @media (width >= 48rem) {
      display: table-cell;
    }
  }
  #app-main-content > * > .hubleto.component.table .table-body tbody tr td:nth-child(n+4) {
    display: none;
    @media (width >= 48rem) {
      display: table-cell;
    }
  }
}
@layer hubleto-framework {
  .p-progressbar .p-progressbar-value {
    background-color: var(--color-primary);
  }
  .p-datatable .p-datatable-tbody > tr > td {
    border-color: var(--color-gray-50);
    &:where(.dark, .dark *) {
      border-color: var(--color-slate-600);
    }
  }
  .p-datatable .p-datatable-thead > tr > th {
    padding: calc(var(--spacing) * 1);
    &:where(.dark, .dark *) {
      border-color: var(--color-slate-800);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-800);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .p-datatable .p-datatable-thead > tr > th .p-sortable-column-icon {
    scale: 0.75;
    &:where(.dark, .dark *) {
      color: var(--color-gray-400);
    }
  }
  .p-datatable .p-sortable-column.p-highlight {
    background-color: var(--color-slate-100);
  }
  .p-datatable .p-sortable-column.p-highlight .p-column-header-content .p-column-title {
    color: var(--color-primary);
  }
  .p-datatable .p-sortable-column.p-highlight .p-column-header-content .p-sortable-column-icon {
    color: var(--color-primary);
  }
  .p-datatable tr {
    height: 1px;
  }
  .p-datatable tr td {
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-900);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    height: inherit;
    vertical-align: middle;
  }
  .p-datatable .p-column-filter-clear-button {
    display: none;
  }
  .p-datatable-footer {
    --tw-border-style: none;
    border-style: none;
    background-color: var(--color-slate-100);
    padding: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-800);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .p-dropdown-item.p-highlight {
    background-color: var(--color-slate-100);
    color: var(--color-primary);
  }
  .p-treetable .p-treetable-tbody > tr > td {
    padding: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .p-tree-container .p-treenode {
    margin-left: calc(var(--spacing) * 2);
  }
  .p-tree-container .p-treenode .p-treenode .p-treenode .btn-transparent {
    border-color: var(--color-gray-300);
    background-color: var(--color-slate-50);
  }
  .p-tree-container .p-treenode .p-treenode .btn-transparent {
    border-color: var(--color-gray-300);
    background-color: var(--color-slate-100);
  }
  .p-tree-container .p-treenode .btn-transparent {
    border-color: var(--color-gray-300);
    background-color: var(--color-slate-200);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-600);
      }
    }
  }
  .p-tree-container > .p-treenode {
    margin-left: calc(var(--spacing) * 0);
  }
  .p-tree-filter {
    border-radius: 0.25rem;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-200);
    padding: calc(var(--spacing) * 1);
  }
  .p-tree-toggler.p-link {
    border-radius: 0.25rem;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .p-treenode-content {
    padding: calc(var(--spacing) * 0);
  }
  .p-tree-toggler {
    scale: 0.66;
  }
  .p-tabview {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .p-tabview .p-tabview-ink-bar {
    background-color: var(--color-primary);
  }
  .p-tabview-nav {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-gray-200);
    background-color: transparent;
    &:where(.dark, .dark *) {
      border-bottom-color: var(--color-slate-400);
    }
  }
  .p-tabview-panels {
    padding: calc(var(--spacing) * 1);
    &:where(.dark, .dark *) {
      --tw-border-style: none;
      border-style: none;
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-950);
    }
  }
  .p-tabview-nav-link {
    margin-right: calc(var(--spacing) * 0.5);
    border-radius: 0;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-200);
    border-top-color: var(--color-gray-400);
    background-color: transparent;
    padding: calc(var(--spacing) * 0);
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    text-decoration-line: none !important;
    &:hover {
      @media (hover: hover) {
        border-top-color: var(--color-primary);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
    &:where(.dark, .dark *) {
      border-color: var(--color-slate-600);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #4780bf 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
          }
        }
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .p-tabview-title {
    display: block;
    padding: calc(var(--spacing) * 3);
  }
  .p-tabview-selected > .p-tabview-nav-link {
    border-top-color: var(--color-primary);
    border-right-color: color-mix(in srgb, #4780bf 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-right-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    border-left-color: color-mix(in srgb, #4780bf 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-left-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    background-color: var(--color-white);
    color: var(--color-primary);
    &:hover {
      @media (hover: hover) {
        background-image: none !important;
      }
    }
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #4780bf 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .p-tabview-selected .p-tabview-title {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 30%, transparent) !important;
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 30%, transparent) !important;
        }
      }
    }
  }
  .p-inputswitch {
    zoom: 0.66;
  }
  .p-dialog .p-dialog-header {
    padding: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .p-dialog .p-dialog-title {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .p-dialog .p-dialog-content {
    padding: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-800);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .p-dialog .p-dialog-footer {
    display: flex;
    justify-content: space-between;
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--color-gray-200);
    background-color: var(--color-gray-50);
    padding: calc(var(--spacing) * 4);
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-800);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .p-paginator {
    --tw-border-style: none;
    border-style: none;
    background-color: var(--color-white);
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-900);
    }
  }
  .p-paginator .p-link {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .p-paginator .p-paginator-current {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .p-paginator .p-paginator-pages .p-paginator-page.p-highlight {
    border-color: var(--color-secondary);
    background-color: var(--color-secondary);
    color: var(--color-white);
  }
  .p-paginator .p-paginator-pages .p-paginator-page {
    border-radius: var(--radius-2xl);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-300);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .p-paginator .p-paginator-pages .p-paginator-page:not(.p-highlight):hover {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-500);
    background-color: var(--color-gray-500);
    color: var(--color-white);
  }
  .p-tree {
    padding: calc(var(--spacing) * 0);
  }
}
@layer hubleto-framework {
  app-dialog {
    display: none;
  }
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }
  .no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .alert-primary {
    margin-bottom: calc(var(--spacing) * 4);
    border-radius: var(--radius-lg);
    background-color: color-mix(in srgb, #4780bf 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
    padding: calc(var(--spacing) * 4);
    color: var(--color-primary);
  }
  .alert-secondary {
    margin-bottom: calc(var(--spacing) * 4);
    border-radius: var(--radius-lg);
    background-color: color-mix(in srgb, #41c50d 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 20%, transparent);
    }
    padding: calc(var(--spacing) * 4);
    color: var(--color-secondary);
  }
  .alert-info {
    margin-bottom: calc(var(--spacing) * 4);
    border-radius: var(--radius-lg);
    background-color: var(--color-blue-50);
    padding: calc(var(--spacing) * 4);
    color: var(--color-blue-800);
  }
  .alert-danger {
    margin-bottom: calc(var(--spacing) * 4);
    border-radius: var(--radius-lg);
    background-color: var(--color-red-50);
    padding: calc(var(--spacing) * 4);
    color: var(--color-red-800);
  }
  .alert-success {
    margin-bottom: calc(var(--spacing) * 4);
    border-radius: var(--radius-lg);
    background-color: var(--color-green-50);
    padding: calc(var(--spacing) * 4);
    color: var(--color-green-800);
  }
  .alert-warning {
    margin-bottom: calc(var(--spacing) * 4);
    border-radius: var(--radius-lg);
    background-color: var(--color-yellow-50);
    padding: calc(var(--spacing) * 4);
    color: var(--color-yellow-800);
  }
  .alert-danger {
    margin-bottom: calc(var(--spacing) * 4);
    border-radius: var(--radius-lg);
    background-color: var(--color-red-50);
    padding: calc(var(--spacing) * 4);
    color: var(--color-red-800);
  }
  .badge {
    margin: calc(var(--spacing) * 0.5);
    display: inline;
    border-radius: 0.25rem;
    background-color: var(--color-slate-300);
    padding: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-slate-800);
  }
  .badge.badge-large {
    margin: calc(var(--spacing) * 1);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .badge.badge-extra-large {
    margin: calc(var(--spacing) * 1);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .badge.badge-small {
    margin: calc(var(--spacing) * 0);
    padding-inline: calc(var(--spacing) * 0.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .badge-info {
    background-color: var(--color-blue-50);
    color: var(--color-blue-800);
  }
  .badge-danger {
    background-color: var(--color-red-50);
    color: var(--color-red-800);
  }
  .badge-success {
    background-color: var(--color-green-50);
    color: var(--color-green-800);
  }
  .badge-warning {
    background-color: var(--color-yellow-50);
    color: var(--color-yellow-800);
  }
  .badge-danger {
    background-color: var(--color-red-50);
    color: var(--color-red-800);
  }
  .badge-primary {
    background-color: color-mix(in srgb, #4780bf 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
    color: var(--color-primary);
  }
  .badge-secondary {
    background-color: color-mix(in srgb, #41c50d 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 20%, transparent);
    }
    color: var(--color-secondary);
  }
  .badge-blue {
    background-color: var(--color-blue-100);
    color: var(--color-blue-800);
  }
  .badge-green {
    background-color: var(--color-green-100);
    color: var(--color-green-800);
  }
  .badge-red {
    background-color: var(--color-red-100);
    color: var(--color-red-800);
  }
  .badge-yellow {
    background-color: var(--color-yellow-100);
    color: var(--color-yellow-800);
  }
  .badge-lime {
    background-color: var(--color-lime-100);
    color: var(--color-lime-800);
  }
  .badge-violet {
    background-color: var(--color-violet-100);
    color: var(--color-violet-800);
  }
  .btn {
    margin: calc(var(--spacing) * 0);
    display: inline-flex;
    min-height: calc(var(--spacing) * 8);
    cursor: pointer;
    align-items: center;
    border-radius: 0.25rem;
    border-color: var(--color-slate-200);
    background-color: var(--color-primary);
    padding: calc(var(--spacing) * 0);
    text-align: left;
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
    box-sizing: border-box;
  }
  .btn.btn-small {
    height: auto;
  }
  .btn .icon {
    height: 100%;
    align-items: center;
    justify-content: center;
    border-color: var(--color-slate-200);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
  }
  .btn .text {
    height: 100%;
    align-items: center;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    overflow-wrap: break-word;
    max-height: 3.5rem;
    overflow: hidden;
  }
  .btn .shortcut {
    margin-right: calc(var(--spacing) * 1);
    flex: 1;
    text-align: right;
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-gray-400);
    max-height: 3.5rem;
    overflow: hidden;
  }
  .btn.btn-no-border {
    --tw-border-style: none !important;
    border-style: none !important;
  }
  .btn.btn-extra-small .icon {
    padding-inline: calc(var(--spacing) * 1);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: 0.3rem;
  }
  .btn.btn-extra-small .text {
    padding-inline: calc(var(--spacing) * 1);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: 0.3rem;
  }
  .btn.btn-small .icon {
    padding-block: calc(var(--spacing) * 0);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .btn.btn-small .text {
    padding-block: calc(var(--spacing) * 0);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .btn.btn-large .icon {
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 1.5);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .btn.btn-large .text {
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 1.5);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .btn.btn-extra-large .icon {
    padding-inline: calc(var(--spacing) * 3.5);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .btn.btn-extra-large .text {
    padding-inline: calc(var(--spacing) * 3.5);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .btn-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .btn.btn-transparent {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-100);
    background-color: transparent;
    color: var(--color-gray-800);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-200);
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-600);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-slate-800);
        }
      }
    }
  }
  .btn.btn-primary {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-primary);
    background-color: var(--color-primary);
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        border-color: color-mix(in srgb, #4780bf 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-primary) 80%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #4780bf 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 80%, transparent);
        }
      }
    }
  }
  .btn.btn-primary-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: dotted;
    border-style: dotted;
    border-color: var(--color-primary);
    background-color: var(--color-white);
    color: var(--color-primary);
    &:hover {
      @media (hover: hover) {
        --tw-border-style: solid;
        border-style: solid;
      }
    }
  }
  .btn.btn-secondary {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-secondary);
    background-color: var(--color-secondary);
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        border-color: color-mix(in srgb, #41c50d 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-secondary) 80%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #41c50d 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-secondary) 80%, transparent);
        }
      }
    }
  }
  .btn.btn-white {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-100);
    background-color: var(--color-white);
    color: var(--color-gray-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .btn.btn-light {
    background-color: color-mix(in srgb, #4780bf 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    color: var(--color-primary);
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #41c50d 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
        }
      }
    }
  }
  .btn.btn-danger {
    background-color: var(--color-red-200);
    color: var(--color-red-600);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-400);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .btn.btn-success {
    background-color: var(--color-green-700);
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-900);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .btn.btn-success-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: dotted;
    border-style: dotted;
    border-color: var(--color-green-700);
    background-color: var(--color-white);
    color: var(--color-green-700);
    &:hover {
      @media (hover: hover) {
        --tw-border-style: solid;
        border-style: solid;
      }
    }
  }
  .btn.btn-add {
    background-color: var(--color-secondary);
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #41c50d 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-secondary) 80%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .btn.btn-add-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: dotted;
    border-style: dotted;
    border-color: var(--color-secondary);
    background-color: var(--color-white);
    color: var(--color-secondary);
    &:hover {
      @media (hover: hover) {
        --tw-border-style: solid;
        border-style: solid;
      }
    }
  }
  .btn.btn-edit {
    background-color: var(--color-secondary);
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #41c50d 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-secondary) 80%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .btn.btn-edit-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: dotted;
    border-style: dotted;
    border-color: var(--color-secondary);
    background-color: var(--color-white);
    color: var(--color-secondary);
    &:hover {
      @media (hover: hover) {
        --tw-border-style: solid;
        border-style: solid;
      }
    }
  }
  .btn.btn-save {
    background-color: var(--color-secondary);
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-900);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .btn.btn-save-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: dotted;
    border-style: dotted;
    border-color: var(--color-secondary);
    background-color: var(--color-white);
    color: var(--color-secondary);
    &:hover {
      @media (hover: hover) {
        --tw-border-style: solid;
        border-style: solid;
      }
    }
  }
  .btn.btn-delete {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-red-100);
    background-color: var(--color-red-100);
    color: var(--color-red-800);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-red-200);
      }
    }
  }
  .btn.btn-delete-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-red-100);
    background-color: transparent;
    color: var(--color-red-800);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-red-200);
      }
    }
  }
  .btn.btn-cancel {
    background-color: var(--color-gray-200);
    color: var(--color-gray-600);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-400);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .btn.btn-cancel-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: dotted;
    border-style: dotted;
    border-color: var(--color-gray-200);
    background-color: var(--color-white);
    color: var(--color-gray-600);
    &:hover {
      @media (hover: hover) {
        --tw-border-style: solid;
        border-style: solid;
      }
    }
  }
  .btn.btn-close {
    background-color: var(--color-red-200);
    color: var(--color-red-600);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-400);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .btn.btn-close-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: dotted;
    border-style: dotted;
    border-color: var(--color-gray-200);
    background-color: var(--color-white);
    color: var(--color-gray-600);
    &:hover {
      @media (hover: hover) {
        --tw-border-style: solid;
        border-style: solid;
      }
    }
  }
  .btn.btn-info {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-blue-50);
    background-color: var(--color-blue-50);
    color: var(--color-blue-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-200);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-800);
      }
    }
  }
  .btn.btn-danger {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-red-50);
    background-color: var(--color-red-50);
    color: var(--color-red-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-200);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-800);
      }
    }
  }
  .btn.btn-success {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-green-50);
    background-color: var(--color-green-50);
    color: var(--color-green-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-200);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-800);
      }
    }
  }
  .btn.btn-warning {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-yellow-50);
    background-color: var(--color-yellow-50);
    color: var(--color-yellow-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-200);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-800);
      }
    }
  }
  .btn.btn-blue {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-blue-100);
    background-color: var(--color-blue-100);
    color: var(--color-blue-800);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-blue-200);
      }
    }
  }
  .btn.btn-blue-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-blue-800);
    background-color: transparent;
    color: var(--color-blue-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-200);
      }
    }
  }
  .btn.btn-blue-outline .text {
    border-color: var(--color-blue-800) !important;
  }
  .btn.btn-green {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-green-100);
    background-color: var(--color-green-100);
    color: var(--color-green-800);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-green-200);
      }
    }
  }
  .btn.btn-green-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-green-100);
    background-color: transparent;
    color: var(--color-green-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-200);
      }
    }
  }
  .btn.btn-green-outline .text {
    border-color: var(--color-green-800) !important;
  }
  .btn.btn-red {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-red-100);
    background-color: var(--color-red-100);
    color: var(--color-red-800);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-red-200);
      }
    }
  }
  .btn.btn-red-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-red-100);
    background-color: transparent;
    color: var(--color-red-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-200);
      }
    }
  }
  .btn.btn-red-outline .text {
    border-color: var(--color-red-800) !important;
  }
  .btn.btn-yellow {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-yellow-100);
    background-color: var(--color-yellow-100);
    color: var(--color-yellow-800);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-yellow-200);
      }
    }
  }
  .btn.btn-yellow-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-yellow-800) !important;
    background-color: transparent;
    color: var(--color-yellow-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-50);
      }
    }
  }
  .btn.btn-yellow-outline .text {
    border-color: var(--color-yellow-800) !important;
  }
  .btn.btn-lime {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-lime-100);
    background-color: var(--color-lime-100);
    color: var(--color-lime-800);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-lime-200);
      }
    }
  }
  .btn.btn-lime-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-lime-100);
    background-color: transparent;
    color: var(--color-lime-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-200);
      }
    }
  }
  .btn.btn-lime-outline .text {
    border-color: var(--color-lime-800) !important;
  }
  .btn.btn-violet {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-violet-100);
    background-color: var(--color-violet-100);
    color: var(--color-violet-800);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-violet-200);
      }
    }
  }
  .btn.btn-violet-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-violet-100);
    background-color: transparent;
    color: var(--color-violet-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-200);
      }
    }
  }
  .btn.btn-violet-outline .text {
    border-color: var(--color-violet-800) !important;
  }
  .btn-list-item {
    display: flex;
    width: 100%;
    align-items: center;
    border-radius: 0;
    --tw-border-style: none;
    border-style: none;
    padding: calc(var(--spacing) * 1);
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .list > .btn-list-item:not(:first-child) {
    border-top: 1px solid var(--color-slate-200);
  }
  .btn-list-item .text {
    flex: 1;
  }
  .btn-list-item .icon {
    display: flex;
    align-items: center;
    align-self: center;
  }
  .btn.btn-disabled {
    color: var(--color-gray-200);
    opacity: 0.5;
  }
  .btn.btn-dropdown {
    position: relative;
    align-items: baseline;
  }
  .btn.btn-dropdown > .menu {
    visibility: hidden;
    position: absolute;
    cursor: default;
    background-color: var(--color-white);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    left: 0%;
    top: 110%;
    z-index: 9999999;
  }
  .btn.btn-dropdown > .menu > .list {
    position: absolute;
    z-index: 10;
    margin-top: calc(var(--spacing) * 1);
    :where(& > :not(:last-child)) {
      --tw-border-style: none;
      border-style: none;
    }
    border-radius: 0.25rem;
    background-color: var(--color-white);
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .btn.btn-dropdown:focus-within {
    border-color: var(--color-gray-100);
    background-color: var(--color-gray-100);
    color: var(--color-gray-800);
  }
  .btn.btn-dropdown:focus-within > .menu {
    visibility: visible;
  }
  .btn.btn-dropdown:focus-within > .menu > .list .btn {
    text-wrap: nowrap;
  }
  .btn-group {
    display: flex;
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 0;
      border-inline-style: var(--tw-border-style);
      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    }
    border-radius: 0.25rem;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-100);
  }
  .btn-group.vertical {
    flex-direction: column;
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .btn-group .btn {
    border-radius: 0;
    --tw-border-style: none;
    border-style: none;
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .breadcrumbs {
    margin-left: calc(var(--spacing) * 4);
    display: flex;
  }
  .breadcrumbs ol li:nth-child(n+2) {
    display: none;
    @media (width >= 40rem) {
      display: block;
    }
    @media (width >= 48rem) {
      display: block;
    }
  }
  .breadcrumbs ol > li > div {
    display: flex;
    align-items: center;
  }
  .breadcrumbs ol > li > div > a {
    margin-inline-start: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-gray-500);
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
    @media (width >= 48rem) {
      margin-inline-start: calc(var(--spacing) * 2);
    }
  }
  .breadcrumbs ol > li > div > span {
    margin-inline-start: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-gray-800);
  }
  .card {
    display: flex;
    flex-direction: column;
    border-radius: 0.25rem;
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: solid;
    border-style: solid;
    border-color: var(--color-slate-200);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-800);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-900);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .card.card-horizontal {
    display: flex;
    flex-direction: row;
  }
  .card-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-slate-200);
    background-color: var(--color-gray-100);
    padding: calc(var(--spacing) * 2);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    color: var(--color-gray-800);
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-700);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-800);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .card.card-horizontal .card-header {
    --tw-border-style: none;
    border-style: none;
  }
  .card-header-buttons {
    margin: calc(var(--spacing) * -4);
  }
  .card-header-buttons .btn {
    border-radius: 0;
    --tw-border-style: none;
    border-style: none;
    padding: calc(var(--spacing) * 4);
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .card-header-buttons .btn .icon {
    margin-block: calc(var(--spacing) * 0);
    padding-block: calc(var(--spacing) * 0);
  }
  .card-header-buttons .btn .text {
    margin-block: calc(var(--spacing) * 0);
    padding-block: calc(var(--spacing) * 0);
  }
  .card-header small {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .card-body {
    flex: 1;
    padding: calc(var(--spacing) * 2);
  }
  .card-footer {
    display: flex;
    justify-content: space-between;
    gap: calc(var(--spacing) * 2);
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--color-slate-200);
    padding: calc(var(--spacing) * 4);
  }
  .dialog {
    border-radius: 0.25rem;
    background-color: var(--color-white);
  }
  .dialog-header {
    padding: calc(var(--spacing) * 4) !important;
    font-size: var(--text-base) !important;
    line-height: var(--tw-leading, var(--text-base--line-height)) !important;
  }
  .dialog-content {
    padding: calc(var(--spacing) * 4) !important;
    font-size: var(--text-base) !important;
    line-height: var(--tw-leading, var(--text-base--line-height)) !important;
  }
  .dialog-footer {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--color-slate-200);
    background-color: var(--color-gray-50);
    padding: calc(var(--spacing) * 4);
  }
  .dialog-danger-header {
    background-color: var(--color-red-600);
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-400);
      }
    }
  }
  .dialog-warning-header {
    background-color: var(--color-yellow-300);
    color: var(--color-gray-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-200);
      }
    }
  }
  .dialog-confirm-header {
    background-color: var(--color-blue-300);
    color: var(--color-gray-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-200);
      }
    }
  }
  .divider {
    padding-inline: calc(var(--spacing) * 1);
    padding-top: calc(var(--spacing) * 4);
    padding-bottom: calc(var(--spacing) * 2);
  }
  .divider.dense {
    padding-inline: calc(var(--spacing) * 1);
    padding-block: calc(var(--spacing) * 2);
  }
  .divider > div {
    position: relative;
  }
  .divider > div > div {
    position: relative;
    display: flex;
    justify-content: flex-start;
  }
  .divider > div > div:nth-child(1) {
    position: absolute;
    inset: calc(var(--spacing) * 0);
    display: flex;
    align-items: center;
  }
  .divider > div > div:nth-child(1) > div {
    width: 100%;
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--color-gray-200);
  }
  .divider > div > div:nth-child(2) > span {
    margin-left: calc(var(--spacing) * 3);
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: var(--color-white);
    padding-inline: calc(var(--spacing) * 3);
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-600);
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-600);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .list {
    list-style-type: none;
    border-radius: 0.25rem;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-slate-200);
  }
  .list > *:not(:first-child) {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--color-slate-200);
  }
  .list.bordered .list-item {
    border-bottom-color: var(--color-slate-100);
  }
  .form {
    border-radius: var(--radius-sm);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-slate-200);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .form .form-header {
    display: flex;
    width: 100%;
    align-items: baseline;
    justify-content: space-between;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-bottom-color: var(--color-slate-200);
    background-color: var(--color-gray-50);
    padding: calc(var(--spacing) * 2);
    color: var(--color-primary);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .form .form-header .modal-header-left {
    display: flex;
    flex: 1;
    gap: calc(var(--spacing) * 1);
  }
  .form .form-header .modal-header-title {
    flex: 1;
    text-align: center;
  }
  .form .form-header .modal-header-right {
    display: flex;
    flex: 1;
    justify-content: flex-end;
    gap: calc(var(--spacing) * 1);
  }
  .form .form-body {
    flex: 1;
    overflow-y: auto;
    padding: calc(var(--spacing) * 2);
  }
  .form .form-body .form-content.not-initialized {
    opacity: 0.5;
  }
  .form .form-body .form-top-menu {
    margin-bottom: calc(var(--spacing) * 2);
    display: flex;
    gap: calc(var(--spacing) * 2);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-bottom-color: var(--color-gray-700);
    padding: calc(var(--spacing) * 2);
  }
  .form .form-footer {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-top-color: var(--color-slate-200);
    background-color: var(--color-gray-50);
    padding: calc(var(--spacing) * 2);
  }
  .input-wrapper {
    position: relative;
    align-items: center;
    justify-content: space-between;
    border-radius: var(--radius-sm);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    padding: calc(var(--spacing) * 1);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
          }
        }
      }
    }
    box-sizing: border-box;
  }
  .input-wrapper .input-label {
    display: block;
    flex: 1;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-gray-400);
  }
  .input-wrapper.required {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
    &::before {
      content: var(--tw-content);
      color: var(--color-red-600);
    }
    &::before {
      content: var(--tw-content);
      --tw-content: '*';
      content: var(--tw-content);
    }
  }
  .input-wrapper.required .input-label {
    padding-left: calc(var(--spacing) * 3);
  }
  .input-wrapper .input-body {
    display: flex;
    flex: 2;
    align-items: center;
    overflow-wrap: anywhere;
  }
  .input-wrapper .input-info {
    padding-right: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-gray-500);
  }
  .input-wrapper .input-description {
    padding-right: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-primary);
  }
  .input-highlighted {
    background-color: color-mix(in srgb, #4780bf 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
  }
  .key-value-table {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-slate-200);
    --tw-leading: calc(var(--spacing) * 8);
    line-height: calc(var(--spacing) * 8);
  }
  .key-value-table.dense {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-slate-200);
    --tw-leading: calc(var(--spacing) * 4);
    line-height: calc(var(--spacing) * 4);
  }
  .key-value-table > div {
    display: flex;
    justify-content: space-between;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-slate-200);
    padding: calc(var(--spacing) * 1);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .key-value-table > div div:nth-child(2) {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .modal {
    display: flex;
    height: 100vh;
    width: 100%;
    flex-direction: column;
    overflow: auto;
    background-color: var(--color-white);
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-950);
    }
  }
  .modal.right {
    position: fixed;
    top: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    z-index: 50;
    height: 100%;
    max-height: 100vh;
    max-width: 100vw;
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
    border-color: var(--color-primary);
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    @media (width >= 48rem) {
      right: calc(var(--spacing) * 0);
    }
    @media (width >= 48rem) {
      left: auto;
    }
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
    &:where(.dark, .dark *) {
      border-color: var(--color-slate-800);
    }
    &:where(.dark, .dark *) {
      --tw-shadow-color: #000;
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-black) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .modal.right.wide {
    @media (width >= 48rem) {
      width: 80%;
    }
  }
  .modal.right.wider {
    @media (width >= 48rem) {
      width: 90vw;
    }
  }
  .modal.right.wide .modal.right.wide {
    @media (width >= 48rem) {
      width: 80%;
    }
  }
  .modal.centered {
    position: fixed;
    z-index: 50;
    margin-inline: auto;
    border-radius: 0.25rem;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-primary);
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    @media (width >= 48rem) {
      margin-block: calc(var(--spacing) * 4);
    }
    @media (width >= 48rem) {
      height: calc(100vh - 2rem);
    }
    @media (width >= 48rem) {
      width: calc(2/3 * 100%);
    }
    &:where(.dark, .dark *) {
      border-color: var(--color-slate-800);
    }
    top: 0;
    left: 50%;
    transform: translate(-50%, 0%);
  }
  .modal.centered.large {
    @media (width >= 48rem) {
      height: 90vh;
    }
    @media (width >= 48rem) {
      width: 90vw;
    }
  }
  .modal.centered.small {
    position: fixed;
    z-index: 50;
    margin-inline: auto;
    margin-top: calc(var(--spacing) * 1);
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    @media (width >= 48rem) {
      height: calc(2/3 * 100%);
    }
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .modal.centered.tiny {
    position: fixed;
    z-index: 50;
    margin-inline: auto;
    margin-top: calc(var(--spacing) * 1);
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    @media (width >= 48rem) {
      height: calc(1/3 * 100%);
    }
    @media (width >= 48rem) {
      width: calc(1/3 * 100%);
    }
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .modal.inside-parent {
    position: absolute;
    top: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    margin-bottom: calc(var(--spacing) * 2);
    height: 100%;
    background-color: var(--color-white);
    z-index: 10;
    background: #00000020;
  }
  .modal.inside-parent > .modal-inner {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-primary);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    width: calc(100% - 2em);
    margin: 1em;
    background: white;
  }
  .modal > .modal-inner {
    display: flex;
    height: 100%;
    width: 100%;
    flex-direction: column;
  }
  .modal > .modal-inner > .modal-header {
    display: flex;
    width: 100%;
    align-items: baseline;
    align-items: center;
    justify-content: space-between;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-bottom-color: color-mix(in srgb, #4780bf 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
    background-color: color-mix(in srgb, #4780bf 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);
    }
    padding: calc(var(--spacing) * 2);
    color: var(--color-primary);
    &:where(.dark, .dark *) {
      border-color: var(--color-slate-800);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-900);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .modal > .modal-inner > .modal-header > .modal-header-left {
    display: flex;
    flex: 1;
    gap: calc(var(--spacing) * 1);
  }
  .modal > .modal-inner > .modal-header > .modal-header-title {
    flex: 10;
    text-align: center;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    @media (width >= 48rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .modal > .modal-inner > .modal-header > .modal-header-title h2 {
    margin: calc(var(--spacing) * 0);
    padding: calc(var(--spacing) * 0);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-primary);
    @media (width >= 48rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .modal > .modal-inner > .modal-header > .modal-header-right {
    display: flex;
    flex: 1;
    justify-content: flex-end;
    gap: calc(var(--spacing) * 1);
  }
  .modal > .modal-inner > .modal-header .btn {
    flex-wrap: nowrap;
  }
  .modal > .modal-inner > .modal-header .btn .text {
    display: none;
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .modal > .modal-inner > .modal-top-menu {
    margin-bottom: calc(var(--spacing) * 2);
    display: flex;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-gray-100);
    border-bottom-color: color-mix(in srgb, #4780bf 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
    background-color: var(--color-white);
  }
  .modal > .modal-inner > .modal-top-menu > .btn {
    border-radius: 0;
    --tw-border-style: none;
    border-style: none;
    padding: calc(var(--spacing) * 1);
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .modal > .modal-inner > .modal-body {
    position: relative;
    flex: 1;
    overflow-y: auto;
    padding: calc(var(--spacing) * 2);
  }
  .modal > .modal-inner > .modal-footer {
    display: flex;
    gap: calc(var(--spacing) * 2);
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-top-color: var(--color-gray-200);
    background-color: var(--color-gray-50);
    padding: calc(var(--spacing) * 2);
    &:where(.dark, .dark *) {
      border-color: var(--color-slate-800);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-900);
    }
  }
  .modal.theme-secondary {
    border-color: var(--color-secondary);
  }
  .modal.theme-secondary > .modal-inner {
    border-color: var(--color-secondary);
  }
  .modal.theme-secondary > .modal-inner > .modal-header {
    border-bottom-color: color-mix(in srgb, #41c50d 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-secondary) 20%, transparent);
    }
    background-color: color-mix(in srgb, #41c50d 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 5%, transparent);
    }
    color: var(--color-secondary);
  }
  .modal.theme-secondary > .modal-inner > .modal-header > .modal-header-title h2 {
    color: var(--color-secondary);
  }
  .table-header-search::placeholder {
    filter: grayscale(1);
  }
  .table-default {
    width: 100%;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-200);
    text-align: left;
    color: var(--color-gray-500);
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      text-align: right;
    }
    &:where(.dark, .dark *) {
      color: var(--color-gray-400);
    }
  }
  .table-default > thead {
    background-color: var(--color-gray-50);
    color: var(--color-gray-700);
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-900);
    }
    &:where(.dark, .dark *) {
      color: var(--color-gray-400);
    }
  }
  .table-default > thead > tr > th {
    padding-inline: calc(var(--spacing) * 6);
    padding-block: calc(var(--spacing) * 3);
  }
  .table-default > tbody > tr {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-200);
    background-color: var(--color-white);
    &:nth-child(odd) {
      background-color: var(--color-slate-100);
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
    &:where(.dark, .dark *) {
      border-color: var(--color-slate-700);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-900);
    }
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
    &:nth-child(odd) {
      &:where(.dark, .dark *) {
        background-color: var(--color-slate-800);
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-slate-700);
        }
      }
    }
  }
  .table-default > tbody > tr > th {
    padding-inline: calc(var(--spacing) * 6);
    padding-block: calc(var(--spacing) * 4);
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    white-space: nowrap;
    color: var(--color-gray-900);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .table-default > tbody > tr > td {
    padding-inline: calc(var(--spacing) * 6);
    padding-block: calc(var(--spacing) * 4);
  }
  .table-default > thead {
    background-color: var(--color-gray-50);
    color: var(--color-gray-700);
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-900);
    }
    &:where(.dark, .dark *) {
      color: var(--color-gray-400);
    }
  }
  .table-default.dense > thead > tr > th {
    padding-inline: calc(var(--spacing) * 1);
    padding-block: calc(var(--spacing) * 1);
  }
  .table-default.dense > tbody > tr > th {
    padding-inline: calc(var(--spacing) * 1);
    padding-block: calc(var(--spacing) * 1);
  }
  .table-default.dense > tbody > tr > td {
    padding-inline: calc(var(--spacing) * 1);
    padding-block: calc(var(--spacing) * 1);
  }
  .hubleto-lookup[class*='-container'] {
    width: 100%;
  }
  .hubleto-lookup *[class*='-indicator'] {
    padding: 0px !important;
  }
  .hubleto-lookup *[class*='-control'] {
    width: 100% !important;
    border-radius: var(--radius-sm);
    background-color: var(--color-white) !important;
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-500) !important;
    }
    &:where(.dark, .dark *) {
      color: var(--color-white) !important;
    }
    min-height: auto !important;
  }
  .hubleto-lookup *[class*='-control'] > div {
    padding-bottom: 0px !important;
    padding-top: 0px !important;
  }
  .hubleto-lookup *[class*='-input-container'] {
    margin: calc(var(--spacing) * 0) !important;
    padding: calc(var(--spacing) * 0.5) !important;
    min-width: 2em;
  }
  .hubleto-lookup *[class*='-ValueContainer'] {
    padding: calc(var(--spacing) * 0) !important;
  }
  .hubleto-lookup *[class*='-singleValue'] {
    &:where(.dark, .dark *) {
      color: var(--color-white) !important;
    }
  }
  .hubleto-lookup *[class*='-Input'] {
    font-size: var(--text-sm) !important;
    line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
  }
  .hubleto-lookup *[class*='-menu'] * {
    font-size: var(--text-sm) !important;
    line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
  }
  .hubleto-lookup > div > div {
    padding: calc(var(--spacing) * 0);
  }
  .hubleto-lookup > div > div > div {
    padding: calc(var(--spacing) * 0);
  }
}
@layer hubleto-framework {
  .text-red-to-green---step-1 {
    color: #ff0000;
  }
  .text-red-to-green---step-2 {
    color: #ffa700;
  }
  .text-red-to-green---step-3 {
    color: #fff400;
  }
  .text-red-to-green---step-4 {
    color: #a3ff00;
  }
  .text-red-to-green---step-5 {
    color: #2cba00;
  }
  .text-green-to-red---step-1 {
    color: #2cba00;
  }
  .text-green-to-red---step-2 {
    color: #a3ff00;
  }
  .text-green-to-red---step-3 {
    color: #fff400;
  }
  .text-green-to-red---step-4 {
    color: #ffa700;
  }
  .text-green-to-red---step-5 {
    color: #ff0000;
  }
  .text-dark-blue-to-light-blue---step-1 {
    color: #d6e7ec;
  }
  .text-dark-blue-to-light-blue---step-2 {
    color: #c9dce4;
  }
  .text-dark-blue-to-light-blue---step-3 {
    color: #bad5e1;
  }
  .text-dark-blue-to-light-blue---step-4 {
    color: #aacddd;
  }
  .text-dark-blue-to-light-blue---step-5 {
    color: #9bc5da;
  }
  .text-light-blue-to-dark-blue---step-1 {
    color: #9bc5da;
  }
  .text-light-blue-to-dark-blue---step-2 {
    color: #aacddd;
  }
  .text-light-blue-to-dark-blue---step-3 {
    color: #bad5e1;
  }
  .text-light-blue-to-dark-blue---step-4 {
    color: #c9dce4;
  }
  .text-light-blue-to-dark-blue---step-5 {
    color: #d6e7ec;
  }
  .bg-red-to-green---step-1 {
    background: #ff0000;
    color: white;
  }
  .bg-red-to-green---step-2 {
    background: #ffa700;
  }
  .bg-red-to-green---step-3 {
    background: #fff400;
  }
  .bg-red-to-green---step-4 {
    background: #a3ff00;
  }
  .bg-red-to-green---step-5 {
    background: #2cba00;
    color: white;
  }
  .bg-green-to-red---step-1 {
    background: #2cba00;
    color: white;
  }
  .bg-green-to-red---step-2 {
    background: #a3ff00;
  }
  .bg-green-to-red---step-3 {
    background: #fff400;
  }
  .bg-green-to-red---step-4 {
    background: #ffa700;
  }
  .bg-green-to-red---step-5 {
    background: #ff0000;
    color: white;
  }
  .bg-light-blue-to-dark-blue---step-1 {
    background: #d6e7ec;
  }
  .bg-light-blue-to-dark-blue---step-2 {
    background: #c9dce4;
  }
  .bg-light-blue-to-dark-blue---step-3 {
    background: #bad5e1;
  }
  .bg-light-blue-to-dark-blue---step-4 {
    background: #aacddd;
  }
  .bg-light-blue-to-dark-blue---step-5 {
    background: #9bc5da;
  }
  .bg-dark-blue-to-light-blue---step-1 {
    background: #9bc5da;
  }
  .bg-dark-blue-to-light-blue---step-2 {
    background: #aacddd;
  }
  .bg-dark-blue-to-light-blue---step-3 {
    background: #bad5e1;
  }
  .bg-dark-blue-to-light-blue---step-4 {
    background: #c9dce4;
  }
  .bg-dark-blue-to-light-blue---step-5 {
    background: #d6e7ec;
  }
}
@layer hubleto-main {
  @font-face {
    font-family: 'Gabarito';
    font-style: normal;
    font-weight: 500;
    src: url(../../fonts/Gabarito/static/Gabarito-Regular.ttf) format('truetype');
  }
  :root {
    --font-family: 'Gabarito' !important;
  }
  html {
    font-size: 10pt;
  }
  .dark::placeholder {
    color: var(--color-white);
  }
  nav#default-navbar {
    background-color: var(--color-white);
    height: var(--nav-height);
  }
  #app-main-content {
    margin-left: calc(var(--spacing) * 0);
    padding: calc(var(--spacing) * 2);
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 36);
    }
  }
  #app-main-content.sidebar-two-levels {
    margin-left: calc(var(--spacing) * 0);
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 96);
    }
  }
  #app-main-content > h1, h1.app-main-title {
    margin: calc(var(--spacing) * 0);
    margin-bottom: calc(var(--spacing) * 2);
    display: flex;
    width: 100%;
    justify-content: space-between;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-bottom-color: color-mix(in srgb, #4780bf 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
    padding: calc(var(--spacing) * 0);
    padding-bottom: calc(var(--spacing) * 2);
    color: var(--color-primary);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  h1.app-main-title .app-main-title-buttons {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .app-launcher-show-btn {
    margin: calc(var(--spacing) * 1);
    display: flex;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    gap: calc(var(--spacing) * 2);
    border-radius: 0.25rem;
    background-color: color-mix(in srgb, #4780bf 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 70%, transparent);
    }
    padding: calc(var(--spacing) * 1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
      }
    }
  }
  aside#default-sidebar > nav {
    width: calc(var(--spacing) * 48);
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
    border-color: color-mix(in srgb, #4780bf 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
    background-color: var(--color-white) !important;
  }
  aside#default-sidebar > nav .btn {
    padding-left: calc(var(--spacing) * 1);
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #4780bf 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }
      }
    }
  }
  aside#default-sidebar > nav .btn .icon {
    color: var(--color-gray-800);
  }
  aside#default-sidebar > nav .btn .text {
    color: var(--color-gray-800);
  }
  aside#default-sidebar > nav .btn.btn-active {
    background-color: var(--color-primary);
  }
  aside#default-sidebar > nav .btn.btn-active .icon {
    color: var(--color-white);
  }
  aside#default-sidebar > nav .btn.btn-active .text {
    color: var(--color-white);
  }
  div#app-main-content {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 48);
    }
  }
  #app-launcher {
    position: fixed;
    display: none;
    height: 100%;
    width: 100%;
    background-color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
    z-index: 10000;
    top: 0;
    left: 0;
    overflow: auto;
  }
  #app-launcher.visible {
    display: block;
  }
  #app-launcher > div {
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    gap: calc(var(--spacing) * 4);
    padding: calc(var(--spacing) * 10);
    width: 75%;
  }
  #app-launcher > div .app-launcher-header {
    width: 100%;
  }
  #app-launcher > div .app-launcher-header input {
    margin-right: calc(var(--spacing) * 2);
    width: calc(1/2 * 100%);
    border-radius: 0.25rem;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-primary);
    background-color: var(--color-white);
    padding: calc(var(--spacing) * 2);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  #app-launcher > div .app-launcher-app-button {
    display: flex;
    width: calc(1/6 * 100%);
    cursor: pointer;
    flex-direction: column;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-primary);
    background-color: var(--color-white);
    color: var(--color-slate-800);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  #app-launcher > div .app-launcher-app-button .icon {
    padding: calc(var(--spacing) * 4);
    text-align: center;
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  #app-launcher > div .app-launcher-app-button .text {
    padding: calc(var(--spacing) * 4);
    text-align: center;
  }
  .btn-add {
    background-color: var(--color-amber-600);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-400);
      }
    }
  }
  .btn-add-outline {
    --tw-border-style: solid;
    border-style: solid;
    border-color: var(--color-amber-600);
    color: var(--color-amber-600);
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(66.6% 0.179 58.318) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-amber-600) 20%, transparent);
        }
      }
    }
  }
  .btn-edit {
    background-color: var(--color-amber-600);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-400);
      }
    }
  }
  .btn-square {
    flex-direction: column;
    text-align: center;
  }
  .btn-square .icon {
    display: flex;
    height: calc(var(--spacing) * 12);
    justify-content: center;
  }
  .btn-square .text {
    height: auto;
  }
  .card-header {
    background-color: var(--color-white);
  }
  .modal-header-title h2 {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .fc .fc-toolbar-title {
    font-size: var(--text-base) !important;
    line-height: var(--tw-leading, var(--text-base--line-height)) !important;
  }
  .sidebar-group-btns {
    margin-block: calc(var(--spacing) * 1);
    margin-left: calc(var(--spacing) * 1);
    border-radius: 0.25rem;
    background-color: color-mix(in srgb, #4780bf 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    padding: calc(var(--spacing) * 1);
  }
}
@property --tw-border-spacing-x {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-spacing-y {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-divide-x-reverse: 0;
      --tw-divide-y-reverse: 0;
    }
  }
}
